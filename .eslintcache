[{"C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCard.jsx":"1","C:\\Windows\\life-nest\\life-nest-foundation\\src\\index.jsx":"2","C:\\Windows\\life-nest\\life-nest-foundation\\src\\pages\\profilePage.jsx":"3","C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCardMock.jsx":"4","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\pwdExpiry.card.jsx":"5","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\contactInfo.card.jsx":"6","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\mealPlan.card.jsx":"7","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\accountDetail.card.jsx":"8","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\helpInfo.card.jsx":"9","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\profile-dashboard.js":"10","C:\\Windows\\life-nest\\life-nest-foundation\\src\\hooks\\useProfileInfo.js":"11"},{"size":5037,"mtime":1654718084086,"results":"12","hashOfConfig":"13"},{"size":637,"mtime":1654536759227,"results":"14","hashOfConfig":"13"},{"size":177,"mtime":1654536759222,"results":"15","hashOfConfig":"13"},{"size":7440,"mtime":1654887957596,"results":"16","hashOfConfig":"13"},{"size":2900,"mtime":1654895749493,"results":"17","hashOfConfig":"13"},{"size":2940,"mtime":1654895749493,"results":"18","hashOfConfig":"13"},{"size":2860,"mtime":1654895749493,"results":"19","hashOfConfig":"13"},{"size":2919,"mtime":1654895749493,"results":"20","hashOfConfig":"13"},{"size":1297,"mtime":1654800743937,"results":"21","hashOfConfig":"13"},{"size":4950,"mtime":1654895107154,"results":"22","hashOfConfig":"13"},{"size":1760,"mtime":1654895871390,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"1nh3pln",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"28"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},"C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCard.jsx",["68","69","70","71","72","73","74","75","76","77"],[],"import React, {useEffect, useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    QueryClient,\r\n    QueryClientProvider,\r\n    useQuery\r\n} from 'react-query'\r\nimport { useCardInfo, useData } from \"@ellucian/experience-extension/extension-utilities\";\r\nimport axios from \"axios\";\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nexport async function fetchCurrentTerm(getEthosQuery){\r\n    try {\r\n        const event= new Date(Date.now());\r\n        const jsonDate = event.toJSON();\r\n        const datetime = jsonDate.substring(0, jsonDate.indexOf('T'));\r\n        const currentTerm = await getEthosQuery({queryId: 'get-this-term', properties: {'current': datetime}});\r\n        const {data: {term: {edges: termEdges } = []} = {} } = currentTerm;\r\n        const term = termEdges.map(edge => edge.node);\r\n        return term[0]\r\n    } catch (error) {\r\n        throw new Error('Error during ethos query');\r\n    }\r\n}\r\n\r\nexport async function fetchProfileData({queryKey}){\r\n    const [_key, {getExtensionJwt, base, endpoint, method}] = queryKey\r\n    console.log(queryKey);\r\n\r\n    try {\r\n        const url = `${base}/${endpoint}`;\r\n        const jwt = await getExtensionJwt();\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error\r\n    }\r\n}\r\n\r\nexport async function fetchBalanceDetail({queryKey}){\r\n    const [_key, {getExtensionJwt, base, endpoint, method, term}] = queryKey\r\n    console.log(queryKey);\r\n    const payload={\"term\":term}\r\n\r\n    try {\r\n        const url = `${base}/${endpoint}`;\r\n        const jwt = await getExtensionJwt();\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res => res.json())\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error\r\n    }\r\n}\r\n\r\nconst ProfileDashboard = () => {\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {configuration} = useCardInfo();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [termSelected, setTermSelected] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function getThisTerm(){\r\n            const termObject = await fetchCurrentTerm(getEthosQuery);\r\n            console.log(termObject);\r\n            setTermSelected(termObject.code)\r\n        }\r\n        getThisTerm();\r\n    }, [])\r\n\r\n    const pwdQuery = useQuery(\r\n        [\"pwdExpiry\", {getExtensionJwt, base, endpoint: 'pwdexpiry', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n    const mealQuery = useQuery(\r\n        [\"mealPlan\", {getExtensionJwt, base, endpoint: 'transact', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n    const contactQuery = useQuery(\r\n        [\"contactInfo\", {getExtensionJwt, base, endpoint: 'profile', method: 'GET'}],\r\n        fetchProfileData\r\n    )\r\n    const balanceQuery = useQuery(\r\n        [\"accountBalance\", {getExtensionJwt, base, endpoint: 'account/balance', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n    const detailQuery = useQuery(\r\n        [\"accountDetail\", {getExtensionJwt, base, endpoint: 'account/detail', method: 'POST', term: termSelected}],\r\n        fetchBalanceDetail\r\n    )\r\n\r\n    const {data: pwdData, isLoading: pwdLoading, isError: pwdIsError, error: pwdError} = pwdQuery;\r\n    const {data: mealData, isLoading: mealLoading, isError: mealIsError, error: mealError} = mealQuery;\r\n    const {data: contactData, isLoading: contactLoading, isError: contactIsError, error: contactError} = contactQuery;\r\n    const {data: balanceData, isLoading: balanceLoading, isError: balanceIsError, error: balanceError} = balanceQuery;\r\n    const {data: detailData, isLoading: detailLoading, isError: detailIsError, error: detailError} = detailQuery;\r\n\r\n    if (pwdLoading || mealLoading || contactLoading || balanceLoading || detailLoading){\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    if (pwdIsError){\r\n        return <p>Error: {pwdError}</p>\r\n    }\r\n\r\n    if (mealIsError){\r\n        return <p>Error: {mealError}</p>\r\n    }\r\n\r\n    if (contactIsError){\r\n        return <p>Error: {contactError}</p>\r\n    }\r\n\r\n\r\n    if (balanceIsError){\r\n        return <p>Error: {balanceError}</p>\r\n    }\r\n    if (detailIsError){\r\n        return <p>Error: {detailError}</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <pre>{JSON.stringify(pwdData)}</pre>\r\n            <pre>{JSON.stringify(mealData)}</pre>\r\n            <pre>{JSON.stringify(contactData)}</pre>\r\n            <pre>{JSON.stringify(balanceData)}</pre>\r\n            <pre>{JSON.stringify(detailData)}</pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction App(){\r\n    return(\r\n        <QueryClientProvider client={queryClient}>\r\n            <ProfileDashboard />\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nexport default App;",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"C:\\Windows\\life-nest\\life-nest-foundation\\src\\index.jsx",[],[],"C:\\Windows\\life-nest\\life-nest-foundation\\src\\pages\\profilePage.jsx",["93","94","95"],[],"import React from \"react\";\r\n\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            profilePage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCardMock.jsx",["96","97","98","99"],[],"import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {\r\n    IconSprite,\r\n    Icon\r\n} from '@ellucian/ds-icons/lib'\r\nimport {\r\n    spacing40,\r\n    spacingInset20\r\n} from '@ellucian/react-design-system/core/styles/tokens';\r\n\r\nimport PasswordWidget from '../components/pwdExpiry.card';\r\nimport MealPlanWidget from '../components/mealPlan.card';\r\nimport ContactInfoWidget from '../components/contactInfo.card';\r\nimport AccountBalanceWidget from '../components/accountDetail.card';\r\nimport HelpWidget from '../components/helpInfo.card';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        padding: spacing40\r\n    },\r\n    card: {\r\n        color: theme.palette.text.secondary\r\n    }\r\n});\r\n\r\nfunction FullWidthGrid(props)  {\r\n    const { classes } = props;\r\n    const [pwdOpen, setPwdOpen] = useState(false);\r\n    const [mealOpen, setMealOpen] = useState(false);\r\n    const [contactOpen, setContactOpen] = useState(false);\r\n    const [accountOpen, setAccountOpen] = useState(false);\r\n    const [helpOpen, setHelpOpen] = useState(false);\r\n    const [defaultOpen, setDefaultOpen] = useState(false);\r\n    const [componentOpen, setComponentOpen] = useState('');\r\n\r\n    const handlePasswordClick = () => setComponentOpen('password')\r\n    const handleMealClick = () => setComponentOpen('meal')\r\n    const handleContactClick = () => setComponentOpen('contact')\r\n    const handleAccountClick = () => setComponentOpen('account')\r\n    const handleHelpClick = () => setComponentOpen('help')\r\n\r\n    useEffect(() => {\r\n        switch(componentOpen){\r\n            case 'password':\r\n                setPwdOpen(true);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'meal':\r\n                setPwdOpen(false);\r\n                setMealOpen(true);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'contact':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(true);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'account':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(true);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'help':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(true);\r\n                setDefaultOpen(false);\r\n                break;\r\n            default:\r\n                setDefaultOpen(true);\r\n                setMealOpen(false);\r\n                setPwdOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n\r\n        }\r\n    }, [componentOpen]);\r\n\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n                <Grid container direction=\"row\" spacing={1}>\r\n                    <Grid xs={2} direction=\"column\" alignItems=\"baseline\" justify=\"space-evenly\">\r\n                        <Grid item >\r\n                            <Tooltip id=\"password-expiration\" title=\"Password Expiration\" placement=\"left-start\">\r\n                                <IconButton id=\"password\" onClick={handlePasswordClick} aria-label=\"Password Expiration\" color=\"gray\">\r\n                                    <NotificationBadge>\r\n                                        <Icon name=\"lock\" id=\"passwordExpiration\" style={{ width: 24, height: 24 }} />\r\n                                    </NotificationBadge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item  >\r\n                            <Tooltip id=\"meal-plan-information\" title=\"Meal Plan Information\" placement=\"left-start\">\r\n                                <IconButton onClick={handleMealClick} aria-label=\"Meal Plan Information\" color=\"gray\">\r\n                                    <Icon name=\"dining\" id=\"mealPlanInformation\" style={{ width: 24, height: 24 }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Tooltip id=\"contact-information\" title=\"Contact Information\" placement=\"left-start\">\r\n                                <IconButton onClick={handleContactClick} aria-label=\"Contact Information\" color=\"gray\">\r\n                                    <NotificationBadge>\r\n                                        <Icon name=\"address-card\" id=\"contactInformation\" style={{ width: 24, height: 24 }} />\r\n                                    </NotificationBadge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Tooltip id=\"financial-information\" title=\"Financial Information\" placement=\"left-start\">\r\n                                <IconButton onClick={handleAccountClick} aria-label=\"Financial Information\" color=\"gray\">\r\n                                    <NotificationBadge>\r\n                                        <Icon name=\"institution\" id=\"financialInformation\" style={{ width: 24, height: 24 }} />\r\n                                    </NotificationBadge>\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item >\r\n                            <Tooltip id=\"help-widget\" title=\"Help\" placement=\"left-start\">\r\n                                <IconButton onClick={handleHelpClick} aria-label=\"Help\" color=\"gray\">\r\n                                    <Icon name=\"help\" id=\"help\" style={{ width: 24, height: 24 }} />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid xs={10} direction=\"column\">\r\n                        <Grid item>\r\n                            <Card>\r\n                                {pwdOpen && (<><PasswordWidget /></>)}\r\n                                {mealOpen && (<><MealPlanWidget /></>)}\r\n                                {contactOpen && (<><ContactInfoWidget /></>)}\r\n                                {accountOpen && (<><AccountBalanceWidget /></>)}\r\n                                {helpOpen && (<><HelpWidget /></>)}\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nFullWidthGrid.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(FullWidthGrid);","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\pwdExpiry.card.jsx",["100","101","102","103","104","105","106","107","108","109","110","111","112","113","114"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { ProfileDashboardProvider, useProfileDashboard } from '../context/profile-dashboard';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction PasswordExpirationWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data, isLoading, isError} = useProfileDashboard();\r\n\r\n    // look for password data\r\n    const {password: pwdData} = data;\r\n    const {password: pwdLoading} = isLoading;\r\n    const {password: pwdError} = isError;\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(pwdLoading);\r\n    }, [pwdLoading])\r\n\r\n    useEffect(() => {\r\n        if (pwdData) {\r\n            console.log(pwdData);\r\n        }\r\n    }, [pwdData])\r\n\r\n    useEffect(() => {\r\n        if (pwdError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Password Expiration',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [pwdError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                {JSON.stringify(pwdData)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nPasswordExpirationWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst ProfileDashboardWithStyle = withStyles(styles)(PasswordExpirationWidget);\r\n\r\nfunction ProfileDashboardWithProviders(){\r\n    return (\r\n        <ProfileDashboardProvider>\r\n            <ProfileDashboardWithStyle />\r\n        </ProfileDashboardProvider>\r\n    )\r\n}\r\n\r\nexport default ProfileDashboardWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\contactInfo.card.jsx",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { ProfileDashboardProvider, useProfileDashboard } from '../context/profile-dashboard';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction ContactInformationWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data, isLoading, isError} = useProfileDashboard();\r\n\r\n    // look for contact data\r\n    const {contact: contactData} = data;\r\n    const {contact: contactLoading} = isLoading;\r\n    const {contact: contactError} = isError;\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(contactLoading);\r\n    }, [contactLoading])\r\n\r\n    useEffect(() => {\r\n        if (contactData) {\r\n            console.log(contactData);\r\n        }\r\n    }, [contactData])\r\n\r\n    useEffect(() => {\r\n        if (contactError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Contact Information',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [contactError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                {JSON.stringify(contactData)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactInformationWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst ProfileDashboardWithStyle = withStyles(styles)(ContactInformationWidget);\r\n\r\nfunction ProfileDashboardWithProviders(){\r\n    return (\r\n        <ProfileDashboardProvider>\r\n            <ProfileDashboardWithStyle />\r\n        </ProfileDashboardProvider>\r\n    )\r\n}\r\n\r\nexport default ProfileDashboardWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\mealPlan.card.jsx",["130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { ProfileDashboardProvider, useProfileDashboard } from '../context/profile-dashboard';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction MealPlanWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data, isLoading, isError} = useProfileDashboard();\r\n\r\n    // look for meal plan data\r\n    const {meal: mealData} = data;\r\n    const {meal: mealLoading} = isLoading;\r\n    const {meal: mealError} = isError;\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(mealLoading);\r\n    }, [mealLoading])\r\n\r\n    useEffect(() => {\r\n        if (mealData) {\r\n            console.log(mealData);\r\n        }\r\n    }, [mealData])\r\n\r\n    useEffect(() => {\r\n        if (mealError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Meal Plan',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [mealError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                {JSON.stringify(mealData)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMealPlanWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst ProfileDashboardWithStyle = withStyles(styles)(MealPlanWidget);\r\n\r\nfunction ProfileDashboardWithProviders(){\r\n    return (\r\n        <ProfileDashboardProvider>\r\n            <ProfileDashboardWithStyle />\r\n        </ProfileDashboardProvider>\r\n    )\r\n}\r\n\r\nexport default ProfileDashboardWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\accountDetail.card.jsx",["145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { ProfileDashboardProvider, useProfileDashboard } from '../context/profile-dashboard';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction AccountBalanceWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data, isLoading, isError} = useProfileDashboard();\r\n\r\n    // look for balance data\r\n    const {balance: balanceData} = data;\r\n    const {balance: balanceLoading} = isLoading;\r\n    const {balance: balanceError} = isError;\r\n\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(balanceLoading);\r\n    }, [balanceLoading])\r\n\r\n    useEffect(() => {\r\n        if (data) {\r\n            console.log(balanceData);\r\n        }\r\n    }, [balanceData])\r\n\r\n    useEffect(() => {\r\n        if (balanceError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Account Balance',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [balanceError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                {JSON.stringify(balanceData)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountBalanceWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst ProfileDashboardWithStyle = withStyles(styles)(AccountBalanceWidget);\r\n\r\nfunction ProfileDashboardWithProviders(){\r\n    return (\r\n        <ProfileDashboardProvider>\r\n            <ProfileDashboardWithStyle />\r\n        </ProfileDashboardProvider>\r\n    )\r\n}\r\n\r\nexport default ProfileDashboardWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\helpInfo.card.jsx",["160","161","162","163","164","165","166","167","168"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction HelpWidget(props) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton aria-label=\"Calendar 23 new events\" color=\"gray\">\r\n                <Icon name=\"help\" id=\"calendar2\" style={{ width: 24, height: 24 }} />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nHelpWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HelpWidget);","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\profile-dashboard.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],["185"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'profile-dashboard';\r\nconst queryClient = new QueryClient();\r\nimport {fetchCurrentTerm, fetchProfileData, fetchBalanceDetail} from '../hooks/useProfileInfo';\r\n\r\nfunction ProfileDashboardProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [ pwdCachedData, setPwdCachedData ] = useState();\r\n    const [ mealCachedData, setMealCachedData ] = useState();\r\n    const [ contactCachedData, setContactCachedData ] = useState();\r\n    const [ balanceCachedData, setBalanceCachedData ] = useState();\r\n\r\n    const pwdQuery = useQuery(\r\n        [\"pwdExpiry\", {getExtensionJwt, base, endpoint: 'pwdexpiry', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n\r\n    const contactQuery = useQuery(\r\n        [\"contactInfo\", {getExtensionJwt, base, endpoint: 'profile', method: 'GET'}],\r\n        fetchProfileData\r\n    )\r\n    const mealQuery = useQuery(\r\n        [\"mealPlan\", {getExtensionJwt, base, endpoint: 'transact', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n    const balanceQuery = useQuery(\r\n        [\"accountBalance\", {getExtensionJwt, base, endpoint: 'account/balance', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n\r\n\r\n    const {data: pwdData, isLoading: pwdLoading, isError: pwdIsError, error: pwdError} = pwdQuery;\r\n    const {data: mealData, isLoading: mealLoading, isError: mealIsError, error: mealError} = mealQuery;\r\n    const {data: contactData, isLoading: contactLoading, isError: contactIsError, error: contactError} = contactQuery;\r\n    const {data: balanceData, isLoading: balanceLoading, isError: balanceIsError, error: balanceError} = balanceQuery;\r\n    // const {data: detailData, isLoading: detailLoading, isError: detailIsError, error: detailError} = detailQuery;\r\n\r\n\r\n    const contextValuePwd = useMemo(() => {\r\n        return {\r\n            data: pwdData || pwdCachedData,\r\n            isError: pwdError,\r\n            isLoading: pwdLoading\r\n        }\r\n    }, [pwdCachedData, pwdData, pwdError, pwdLoading]);\r\n\r\n    const contextValueMeal = useMemo(() => {\r\n        return {\r\n            data: mealData || mealCachedData,\r\n            isError: mealError,\r\n            isLoading: mealLoading\r\n        }\r\n    }, [mealCachedData, mealData, mealError, mealLoading]);\r\n\r\n    const contextValueContact = useMemo(() => {\r\n        return {\r\n            data: contactData || contactCachedData,\r\n            isError: contactError,\r\n            isLoading: contactLoading\r\n        }\r\n    }, [contactCachedData, contactData, contactError, contactLoading]);\r\n\r\n    const contextValueBalance = useMemo(() => {\r\n        return {\r\n            data: balanceData || balanceCachedData,\r\n            isError: balanceError,\r\n            isLoading: balanceLoading\r\n        }\r\n    }, [balanceCachedData, balanceData, balanceError, balanceLoading]);\r\n\r\n    const data = {\r\n        password: pwdData,\r\n        meal: mealData,\r\n        contact: contactData,\r\n        balance: balanceData\r\n\r\n    }\r\n\r\n    const isError = {\r\n        password: pwdIsError,\r\n        meal: mealIsError,\r\n        contact: contactIsError,\r\n        balance: balanceIsError\r\n\r\n    }\r\n\r\n    const isLoading = {\r\n        password: pwdLoading,\r\n        meal: mealLoading,\r\n        contact: contactLoading,\r\n        balance: balanceLoading\r\n\r\n    }\r\n\r\n    const contextValue = useMemo(() => {\r\n        return {\r\n            data,\r\n            isError,\r\n            isLoading\r\n        }\r\n    }, [data, isError, isLoading]);\r\n\r\n    useEffect(() => {\r\n        console.log('ProfileDashboardProvider mounted');\r\n        console.log('ContextValue', contextValue);\r\n        return () => {\r\n            console.log('ProfileDashboardProvider unmounted')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValue}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nProfileDashboardProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function ProfileDashboardProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <ProfileDashboardProviderInternal>\r\n                {children}\r\n            </ProfileDashboardProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nProfileDashboardProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function useProfileDashboard(){\r\n    return useContext(Context);\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\hooks\\useProfileInfo.js",["186","187"],[],"export async function fetchCurrentTerm(getEthosQuery){\r\n    try {\r\n        const event= new Date(Date.now());\r\n        const jsonDate = event.toJSON();\r\n        const datetime = jsonDate.substring(0, jsonDate.indexOf('T'));\r\n        const currentTerm = await getEthosQuery({queryId: 'get-this-term', properties: {'current': datetime}});\r\n        const {data: {term: {edges: termEdges } = []} = {} } = currentTerm;\r\n        const term = termEdges.map(edge => edge.node);\r\n        return term[0]\r\n    } catch (error) {\r\n        throw new Error('Error during ethos query');\r\n    }\r\n}\r\n\r\nexport async function fetchProfileData({queryKey}){\r\n    const [_key, {getExtensionJwt, base, endpoint, method}] = queryKey\r\n\r\n    try {\r\n        const url = `${base}/${endpoint}`;\r\n        const jwt = await getExtensionJwt();\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error\r\n    }\r\n}\r\n\r\nexport async function fetchBalanceDetail({queryKey}){\r\n    const [_key, {getExtensionJwt, base, endpoint, method, term}] = queryKey\r\n    console.log(queryKey);\r\n    const payload={\"term\":term}\r\n\r\n    try {\r\n        const url = `${base}/${endpoint}`;\r\n        const jwt = await getExtensionJwt();\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt}`,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res => res.json())\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error\r\n    }\r\n}",{"ruleId":"188","severity":1,"message":"189","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":17},{"ruleId":"188","severity":1,"message":"192","line":9,"column":8,"nodeType":"190","messageId":"191","endLine":9,"endColumn":13},{"ruleId":"188","severity":1,"message":"193","line":28,"column":12,"nodeType":"190","messageId":"191","endLine":28,"endColumn":16},{"ruleId":"188","severity":1,"message":"193","line":48,"column":12,"nodeType":"190","messageId":"191","endLine":48,"endColumn":16},{"ruleId":"194","severity":1,"message":"195","line":114,"column":19,"nodeType":"196","endLine":114,"endColumn":29},{"ruleId":"194","severity":1,"message":"197","line":118,"column":19,"nodeType":"196","endLine":118,"endColumn":26},{"ruleId":"194","severity":1,"message":"197","line":122,"column":19,"nodeType":"196","endLine":122,"endColumn":26},{"ruleId":"194","severity":1,"message":"197","line":126,"column":19,"nodeType":"196","endLine":126,"endColumn":26},{"ruleId":"194","severity":1,"message":"197","line":131,"column":19,"nodeType":"196","endLine":131,"endColumn":26},{"ruleId":"194","severity":1,"message":"197","line":134,"column":19,"nodeType":"196","endLine":134,"endColumn":26},{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"188","severity":1,"message":"228","line":4,"column":22,"nodeType":"190","messageId":"191","endLine":4,"endColumn":27},{"ruleId":"194","severity":1,"message":"229","line":7,"column":14,"nodeType":"196","endLine":9,"endColumn":9},{"ruleId":"194","severity":1,"message":"230","line":7,"column":14,"nodeType":"196","endLine":9,"endColumn":9},{"ruleId":"188","severity":1,"message":"231","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":15},{"ruleId":"188","severity":1,"message":"232","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":15},{"ruleId":"188","severity":1,"message":"233","line":18,"column":5,"nodeType":"190","messageId":"191","endLine":18,"endColumn":19},{"ruleId":"188","severity":1,"message":"234","line":43,"column":12,"nodeType":"190","messageId":"191","endLine":43,"endColumn":23},{"ruleId":"188","severity":1,"message":"235","line":1,"column":40,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"236","line":5,"column":5,"nodeType":"190","messageId":"191","endLine":5,"endColumn":9},{"ruleId":"188","severity":1,"message":"237","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"188","severity":1,"message":"239","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"240","line":9,"column":5,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"231","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"241","line":11,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":15},{"ruleId":"188","severity":1,"message":"242","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22},{"ruleId":"188","severity":1,"message":"243","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"244","line":15,"column":9,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"245","line":24,"column":27,"nodeType":"190","messageId":"191","endLine":24,"endColumn":38},{"ruleId":"188","severity":1,"message":"246","line":24,"column":61,"nodeType":"190","messageId":"191","endLine":24,"endColumn":72},{"ruleId":"188","severity":1,"message":"247","line":28,"column":17,"nodeType":"190","messageId":"191","endLine":28,"endColumn":22},{"ruleId":"188","severity":1,"message":"248","line":74,"column":11,"nodeType":"190","messageId":"191","endLine":74,"endColumn":30},{"ruleId":"188","severity":1,"message":"235","line":1,"column":40,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"236","line":5,"column":5,"nodeType":"190","messageId":"191","endLine":5,"endColumn":9},{"ruleId":"188","severity":1,"message":"237","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"188","severity":1,"message":"239","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"240","line":9,"column":5,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"231","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"241","line":11,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":15},{"ruleId":"188","severity":1,"message":"242","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22},{"ruleId":"188","severity":1,"message":"243","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"244","line":15,"column":9,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"245","line":24,"column":27,"nodeType":"190","messageId":"191","endLine":24,"endColumn":38},{"ruleId":"188","severity":1,"message":"246","line":24,"column":61,"nodeType":"190","messageId":"191","endLine":24,"endColumn":72},{"ruleId":"188","severity":1,"message":"247","line":28,"column":17,"nodeType":"190","messageId":"191","endLine":28,"endColumn":22},{"ruleId":"188","severity":1,"message":"248","line":74,"column":11,"nodeType":"190","messageId":"191","endLine":74,"endColumn":30},{"ruleId":"188","severity":1,"message":"235","line":1,"column":40,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"236","line":5,"column":5,"nodeType":"190","messageId":"191","endLine":5,"endColumn":9},{"ruleId":"188","severity":1,"message":"237","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"188","severity":1,"message":"239","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"240","line":9,"column":5,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"231","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"241","line":11,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":15},{"ruleId":"188","severity":1,"message":"242","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22},{"ruleId":"188","severity":1,"message":"243","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"244","line":15,"column":9,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"245","line":24,"column":27,"nodeType":"190","messageId":"191","endLine":24,"endColumn":38},{"ruleId":"188","severity":1,"message":"246","line":24,"column":61,"nodeType":"190","messageId":"191","endLine":24,"endColumn":72},{"ruleId":"188","severity":1,"message":"247","line":28,"column":17,"nodeType":"190","messageId":"191","endLine":28,"endColumn":22},{"ruleId":"188","severity":1,"message":"248","line":74,"column":11,"nodeType":"190","messageId":"191","endLine":74,"endColumn":30},{"ruleId":"188","severity":1,"message":"235","line":1,"column":40,"nodeType":"190","messageId":"191","endLine":1,"endColumn":48},{"ruleId":"188","severity":1,"message":"236","line":5,"column":5,"nodeType":"190","messageId":"191","endLine":5,"endColumn":9},{"ruleId":"188","severity":1,"message":"237","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"188","severity":1,"message":"239","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"240","line":9,"column":5,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"231","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"241","line":11,"column":5,"nodeType":"190","messageId":"191","endLine":11,"endColumn":15},{"ruleId":"188","severity":1,"message":"242","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22},{"ruleId":"188","severity":1,"message":"243","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"244","line":15,"column":9,"nodeType":"190","messageId":"191","endLine":15,"endColumn":13},{"ruleId":"188","severity":1,"message":"245","line":24,"column":27,"nodeType":"190","messageId":"191","endLine":24,"endColumn":38},{"ruleId":"188","severity":1,"message":"246","line":24,"column":61,"nodeType":"190","messageId":"191","endLine":24,"endColumn":72},{"ruleId":"188","severity":1,"message":"247","line":28,"column":17,"nodeType":"190","messageId":"191","endLine":28,"endColumn":22},{"ruleId":"188","severity":1,"message":"248","line":75,"column":11,"nodeType":"190","messageId":"191","endLine":75,"endColumn":30},{"ruleId":"188","severity":1,"message":"236","line":5,"column":5,"nodeType":"190","messageId":"191","endLine":5,"endColumn":9},{"ruleId":"188","severity":1,"message":"237","line":6,"column":5,"nodeType":"190","messageId":"191","endLine":6,"endColumn":15},{"ruleId":"188","severity":1,"message":"238","line":7,"column":5,"nodeType":"190","messageId":"191","endLine":7,"endColumn":16},{"ruleId":"188","severity":1,"message":"239","line":8,"column":5,"nodeType":"190","messageId":"191","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"240","line":9,"column":5,"nodeType":"190","messageId":"191","endLine":9,"endColumn":21},{"ruleId":"188","severity":1,"message":"231","line":10,"column":5,"nodeType":"190","messageId":"191","endLine":10,"endColumn":15},{"ruleId":"188","severity":1,"message":"242","line":12,"column":5,"nodeType":"190","messageId":"191","endLine":12,"endColumn":22},{"ruleId":"188","severity":1,"message":"243","line":13,"column":5,"nodeType":"190","messageId":"191","endLine":13,"endColumn":12},{"ruleId":"188","severity":1,"message":"247","line":25,"column":17,"nodeType":"190","messageId":"191","endLine":25,"endColumn":22},{"ruleId":"188","severity":1,"message":"249","line":4,"column":9,"nodeType":"190","messageId":"191","endLine":4,"endColumn":32},{"ruleId":"188","severity":1,"message":"250","line":8,"column":7,"nodeType":"190","messageId":"191","endLine":8,"endColumn":15},{"ruleId":"188","severity":1,"message":"251","line":10,"column":9,"nodeType":"190","messageId":"191","endLine":10,"endColumn":25},{"ruleId":"188","severity":1,"message":"252","line":10,"column":45,"nodeType":"190","messageId":"191","endLine":10,"endColumn":63},{"ruleId":"188","severity":1,"message":"253","line":14,"column":12,"nodeType":"190","messageId":"191","endLine":14,"endColumn":19},{"ruleId":"188","severity":1,"message":"254","line":14,"column":21,"nodeType":"190","messageId":"191","endLine":14,"endColumn":30},{"ruleId":"188","severity":1,"message":"255","line":15,"column":27,"nodeType":"190","messageId":"191","endLine":15,"endColumn":33},{"ruleId":"188","severity":1,"message":"256","line":16,"column":29,"nodeType":"190","messageId":"191","endLine":16,"endColumn":42},{"ruleId":"188","severity":1,"message":"257","line":19,"column":28,"nodeType":"190","messageId":"191","endLine":19,"endColumn":44},{"ruleId":"188","severity":1,"message":"258","line":20,"column":29,"nodeType":"190","messageId":"191","endLine":20,"endColumn":46},{"ruleId":"188","severity":1,"message":"259","line":21,"column":32,"nodeType":"190","messageId":"191","endLine":21,"endColumn":52},{"ruleId":"188","severity":1,"message":"260","line":22,"column":32,"nodeType":"190","messageId":"191","endLine":22,"endColumn":52},{"ruleId":"188","severity":1,"message":"261","line":50,"column":11,"nodeType":"190","messageId":"191","endLine":50,"endColumn":26},{"ruleId":"188","severity":1,"message":"262","line":58,"column":11,"nodeType":"190","messageId":"191","endLine":58,"endColumn":27},{"ruleId":"188","severity":1,"message":"263","line":66,"column":11,"nodeType":"190","messageId":"191","endLine":66,"endColumn":30},{"ruleId":"188","severity":1,"message":"264","line":74,"column":11,"nodeType":"190","messageId":"191","endLine":74,"endColumn":30},{"ruleId":"265","severity":2,"message":"266","line":4,"column":9,"nodeType":"190","messageId":"267","endLine":4,"endColumn":32,"suppressions":"268"},{"ruleId":"188","severity":1,"message":"193","line":16,"column":12,"nodeType":"190","messageId":"191","endLine":16,"endColumn":16},{"ruleId":"188","severity":1,"message":"193","line":35,"column":12,"nodeType":"190","messageId":"191","endLine":35,"endColumn":16},"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'_key' is assigned a value but never used.","@calm/react-intl/missing-formatted-message","text may need translation: \"Loading...\"","JSXText","text may need translation: \"Error: \"","callback-return",[],"global-require",[],"id-blacklist",["269"],"lines-around-directive",["270"],"no-buffer-constructor",[],"no-mixed-requires",[],"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-new-require",[],"no-path-concat",[],"no-process-exit",[],"no-restricted-modules",[],"no-spaced-func",["273"],"no-sync",[],"valid-jsdoc",[],"'props' is defined but never used.","text may need translation: \"\n            profilePage\n        \"","no trailing whitespace","'Typography' is defined but never used.","'IconSprite' is defined but never used.","'spacingInset20' is defined but never used.","'defaultOpen' is assigned a value but never used.","'useState' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CircularProgress' is defined but never used.","'IconButton' is defined but never used.","'NotificationBadge' is defined but never used.","'Tooltip' is defined but never used.","'Icon' is defined but never used.","'useCardInfo' is defined but never used.","'useUserInfo' is defined but never used.","'theme' is defined but never used.","'onTransactionsClick' is assigned a value but never used.","'unstable_batchedUpdates' is defined but never used.","'cacheKey' is assigned a value but never used.","'fetchCurrentTerm' is defined but never used.","'fetchBalanceDetail' is defined but never used.","'getItem' is assigned a value but never used.","'storeItem' is assigned a value but never used.","'cardId' is assigned a value but never used.","'getEthosQuery' is assigned a value but never used.","'setPwdCachedData' is assigned a value but never used.","'setMealCachedData' is assigned a value but never used.","'setContactCachedData' is assigned a value but never used.","'setBalanceCachedData' is assigned a value but never used.","'contextValuePwd' is assigned a value but never used.","'contextValueMeal' is assigned a value but never used.","'contextValueContact' is assigned a value but never used.","'contextValueBalance' is assigned a value but never used.","camelcase","Identifier 'unstable_batchedUpdates' is not in camel case.","notCamelCase",["274"],"id-denylist","padding-line-between-statements","no-global-assign","no-unsafe-negation","func-call-spacing",{"kind":"275","justification":"276"},"directive",""]