[{"C:\\Windows\\life-nest\\life-nest-foundation\\src\\index.jsx":"1","C:\\Windows\\life-nest\\life-nest-foundation\\src\\pages\\profilePage.jsx":"2","C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCardMock.jsx":"3","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\pwdExpiry.card.jsx":"4","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\contactInfo.card.jsx":"5","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\mealPlan.card.jsx":"6","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\accountDetail.card.jsx":"7","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\helpInfo.card.jsx":"8","C:\\Windows\\life-nest\\life-nest-foundation\\src\\hooks\\useProfileInfo.js":"9","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\contact-info.context.js":"10","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\meal-plan.context.js":"11","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\password-expiration.context.js":"12","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\account-balance.context.js":"13","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\account-detail.context.js":"14","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\dashboardNotifications.card.jsx":"15"},{"size":637,"mtime":1654536759227,"results":"16","hashOfConfig":"17"},{"size":177,"mtime":1654536759222,"results":"18","hashOfConfig":"17"},{"size":8472,"mtime":1656072125741,"results":"19","hashOfConfig":"17"},{"size":3587,"mtime":1656016077639,"results":"20","hashOfConfig":"17"},{"size":6257,"mtime":1656015667826,"results":"21","hashOfConfig":"17"},{"size":4755,"mtime":1655221905029,"results":"22","hashOfConfig":"17"},{"size":5712,"mtime":1655819372660,"results":"23","hashOfConfig":"17"},{"size":1297,"mtime":1654800743937,"results":"24","hashOfConfig":"17"},{"size":3515,"mtime":1655819293175,"results":"25","hashOfConfig":"17"},{"size":2445,"mtime":1655220810259,"results":"26","hashOfConfig":"17"},{"size":2300,"mtime":1655220810259,"results":"27","hashOfConfig":"17"},{"size":2432,"mtime":1655221499008,"results":"28","hashOfConfig":"17"},{"size":2384,"mtime":1655220810259,"results":"29","hashOfConfig":"17"},{"size":10567,"mtime":1656081929674,"results":"30","hashOfConfig":"17"},{"size":3865,"mtime":1655910901652,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1nh3pln",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"35"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"35"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"35"},"C:\\Windows\\life-nest\\life-nest-foundation\\src\\index.jsx",[],[],["93","94","95","96","97","98","99","100","101","102","103","104","105","106","107"],"C:\\Windows\\life-nest\\life-nest-foundation\\src\\pages\\profilePage.jsx",["108","109","110"],[],"import React from \"react\";\r\n\r\n\r\nconst ProfilePage = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            profilePage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\cards\\profileCardMock.jsx",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],[],"import React, {useState, useEffect, useRef} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Tabs,\r\n    Tab,\r\n    SelectionMenu,\r\n    SelectionMenuItem,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip,\r\n    HeaderBar,\r\n    HeaderBarItem,\r\n    HeaderBarDropdown,\r\n    HeaderUtilityBar,\r\n    HeaderBarLogo,\r\n    MegaMenu\r\n} from '@ellucian/react-design-system/core';\r\nimport {\r\n    IconSprite,\r\n    Icon\r\n} from '@ellucian/ds-icons/lib'\r\nimport {\r\n    spacing40,\r\n    spacingInset20,\r\n    widthFluid\r\n} from '@ellucian/react-design-system/core/styles/tokens';\r\n\r\nimport PasswordWidget from '../components/pwdExpiry.card';\r\nimport MealPlanWidget from '../components/mealPlan.card';\r\nimport ContactInfoWidget from '../components/contactInfo.card';\r\nimport AccountBalanceWidget from '../components/accountDetail.card';\r\nimport HelpWidget from '../components/helpInfo.card';\r\nimport DashboardNotificationsWidget from '../components/dashboardNotifications.card';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n    },\r\n    card: {\r\n        color: theme.palette.text.secondary\r\n    }\r\n});\r\n\r\nfunction FullWidthGrid(props)  {\r\n    const { classes } = props;\r\n    const [pwdOpen, setPwdOpen] = useState(false);\r\n    const [mealOpen, setMealOpen] = useState(false);\r\n    const [contactOpen, setContactOpen] = useState(false);\r\n    const [accountOpen, setAccountOpen] = useState(false);\r\n    const [helpOpen, setHelpOpen] = useState(false);\r\n    const [defaultOpen, setDefaultOpen] = useState(false);\r\n    const [navOpen, setNavOpen] = useState(false);\r\n    const [componentOpen, setComponentOpen] = useState('');\r\n    const [megaMenuOpen, setMegaMenuOpen] = useState(false);\r\n    const [tabSelected, setTabSelected] = useState();\r\n\r\n    const containerRef = useRef(null);\r\n\r\n    const handlePasswordClick = () => setComponentOpen('password')\r\n    const handleMealClick = () => setComponentOpen('meal')\r\n    const handleContactClick = () => setComponentOpen('contact')\r\n    const handleAccountClick = () => setComponentOpen('account')\r\n    const handleHelpClick = () => setComponentOpen('help')\r\n\r\n    useEffect(() => {\r\n        switch(componentOpen){\r\n            case 'password':\r\n                setPwdOpen(true);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'meal':\r\n                setPwdOpen(false);\r\n                setMealOpen(true);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'contact':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(true);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'account':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(true);\r\n                setHelpOpen(false);\r\n                setDefaultOpen(false);\r\n                break;\r\n            case 'help':\r\n                setPwdOpen(false);\r\n                setMealOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(true);\r\n                setDefaultOpen(false);\r\n                break;\r\n            default:\r\n                setDefaultOpen(true);\r\n                setMealOpen(false);\r\n                setPwdOpen(false);\r\n                setContactOpen(false);\r\n                setAccountOpen(false);\r\n                setHelpOpen(false);\r\n\r\n        }\r\n    }, [componentOpen]);\r\n\r\n    const megaMenuItems = [\r\n        {\r\n            key: 'meal',\r\n            content: (\r\n                <NotificationBadge badgeContent={24}>\r\n                    <Icon name=\"dining\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Meal Plan'\r\n        },\r\n        {\r\n            key: 'password',\r\n            content: (\r\n                <NotificationBadge badgeContent={24}>\r\n                    <Icon name=\"lock\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Password'\r\n        },\r\n        {\r\n            key: 'account',\r\n            content: (\r\n                <NotificationBadge badgeContent={true}>\r\n                    <Icon name=\"institution\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Account Balance'\r\n        },\r\n        {\r\n            key: 'contact',\r\n            content: (\r\n                <NotificationBadge badgeContent={true}>\r\n                    <Icon name=\"address-card\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Contact Info'\r\n        }\r\n    ];\r\n\r\n    const selectionItems = [\r\n        {\r\n            key: 'meal',\r\n            content: (\r\n                <NotificationBadge badgeContent={24}>\r\n                    <Icon name=\"dining\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Meal Plan',\r\n            handleClick: handleMealClick\r\n        },\r\n        {\r\n            key: 'password',\r\n            content: (\r\n                <NotificationBadge badgeContent={24}>\r\n                    <Icon name=\"lock\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Password',\r\n            handleClick: handlePasswordClick\r\n        },\r\n        {\r\n            key: 'account',\r\n            content: (\r\n                <NotificationBadge badgeContent={true}>\r\n                    <Icon name=\"institution\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Account Balance',\r\n            handleClick: handleAccountClick\r\n        },\r\n        {\r\n            key: 'contact',\r\n            content: (\r\n                <NotificationBadge badgeContent={true}>\r\n                    <Icon name=\"address-card\" />\r\n                </NotificationBadge>\r\n            ),\r\n            label: 'Contact Info',\r\n            handleClick: handleContactClick\r\n        }\r\n    ];\r\n\r\n\r\n\r\n\r\n    const onTabClick = (e, value) => {\r\n        console.log(\"e\", e);\r\n        console.log(\"value\", value);\r\n        if (value !== 'dropdown') {\r\n            setComponentOpen(value);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id='header-container' className={classes.root}>\r\n                    <Tabs\r\n                        onChange={onTabClick}\r\n                        scrollButtons={true}\r\n                        scrollButtonsOnMobile={true}\r\n                        variant='card'\r\n\r\n                    >\r\n                        {megaMenuItems.map(item => (\r\n                            <Tab\r\n                                key={item.key}\r\n                                label={item.label}\r\n                                value={item.key}\r\n                            />\r\n                        ))}\r\n                        <Tab\r\n                            value='dropdown'\r\n                            label={<SelectionMenu>\r\n                                {selectionItems.map(item => (\r\n                                    <SelectionMenuItem\r\n                                        key={item.key}\r\n                                        value={item.key}\r\n                                        onClick={item.handleClick}\r\n                                    >\r\n                                        {item.content}\r\n                                    </SelectionMenuItem>\r\n                                ))}\r\n                            </SelectionMenu>}\r\n                            id='select'\r\n                        />\r\n                    </Tabs>\r\n            </div>\r\n            <div>\r\n                {defaultOpen && (<>defaultOpen</>)}\r\n                {pwdOpen && (<><PasswordWidget /></>)}\r\n                {mealOpen && (<><MealPlanWidget /></>)}\r\n                {contactOpen && (<><ContactInfoWidget /></>)}\r\n                {accountOpen && (<><AccountBalanceWidget /></>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nFullWidthGrid.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(FullWidthGrid);","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\pwdExpiry.card.jsx",["137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip,\r\n    StatusLabel,\r\n    Illustration,\r\n    IMAGES\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { PasswordExpirationProvider, usePasswordExpiration } from '../context/password-expiration.context';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction PasswordExpirationWidget(props) {\r\n    const {classes} = props;\r\n    const [status, setStatus] = useState('success');\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data: pwdData, isLoading: pwdLoading, isError: pwdIsError, error: pwdError} = usePasswordExpiration();\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(pwdLoading);\r\n    }, [pwdLoading])\r\n\r\n    useEffect(() => {\r\n       if (pwdData){\r\n        console.log(pwdData)\r\n       }\r\n    }, [pwdData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pwdError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Password Expiration',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [pwdError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {pwdData && (\r\n                <>\r\n                    <Illustration name={IMAGES.CALENDAR} />\r\n                    <Typography variant=\"h3\" id=\"pwd-CardContentDescription\" gutterBottom>Days until password expires:</Typography>\r\n                    <StatusLabel\r\n                        id=\"pwd-StatusLabel\"\r\n                        text={`${pwdData.daysLeft}`}\r\n                        type={status}\r\n                    />\r\n                    <Typography\r\n                    className={classes.cardContentDescription}\r\n                    variant=\"body2\"\r\n                    id=\"pwd-CardContentCaption\"\r\n                    gutterBottom>\r\n                    Visit our password management site to change your password</Typography>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nPasswordExpirationWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst PasswordExpirationWithStyle = withStyles(styles)(PasswordExpirationWidget);\r\n\r\nfunction PasswordExpirationWithProviders(){\r\n    return (\r\n        <PasswordExpirationProvider>\r\n            <PasswordExpirationWithStyle />\r\n        </PasswordExpirationProvider>\r\n    )\r\n}\r\n\r\nexport default PasswordExpirationWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\contactInfo.card.jsx",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    StatusLabel,\r\n    Tooltip,\r\n    Table,\r\n    TableRow,\r\n    TableCell\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { ContactInformationProvider, useContactInformation } from '../context/contact-info.context';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction ContactInformationWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data: contactData, isLoading: contactLoading, isError: contactIsError, error: contactError} = useContactInformation();\r\n\r\n    // create shape for caraousel\r\n    /*\r\n        index order:\r\n        0 - profile information\r\n        1 - contact information\r\n        2 - status information\r\n\r\n    */\r\n    const contactInformationShape = [\r\n        {\r\n            preferredName: \"\",\r\n            pronouns: \"\",\r\n            gender: \"\",\r\n            birthdate: \"\",\r\n            studentNumber: \"\"\r\n\r\n        },\r\n        {\r\n            addresses: [],\r\n            phones: [],\r\n            emails: []\r\n\r\n        },\r\n        {\r\n            daysSince: {\r\n                address: \"\",\r\n                phone: \"\",\r\n                email: \"\"\r\n            },\r\n            addressDate: \"\",\r\n            emailDate:\"\",\r\n            phoneDate:\"\",\r\n            lastUpdated:\"\"\r\n        }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus(contactLoading);\r\n    }, [contactLoading])\r\n\r\n    useEffect(() => {\r\n        if (contactData) {\r\n            console.log(contactData);\r\n        }\r\n    }, [contactData])\r\n\r\n    useEffect(() => {\r\n        if (contactError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Contact Information',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [contactIsError, contactError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.content}>\r\n                {contactData && (\r\n                    <div>\r\n                        <h3>Contact Information</h3>\r\n                        <Table>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Address:\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <StatusLabel\r\n                                        text={(contactData.daysSince.daysSinceAddressConfirmed < 180 ) ? \"OKAY\" : \"UPDATE\"}\r\n                                        type={(contactData.daysSince.daysSinceAddressConfirmed < 180 ) ? \"success\" : \"error\"}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Phone:\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <StatusLabel\r\n                                        text={(contactData.daysSince.daysSincePhoneConfirmed < 180 ) ? \"OKAY\" : \"UPDATE\"}\r\n                                        type={(contactData.daysSince.daysSincePhoneConfirmed < 180 ) ? \"success\" : \"error\"}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>\r\n                                        Email:\r\n                                    </Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <StatusLabel\r\n                                        text={(contactData.daysSince.daysSinceEmailConfirmed < 180 ) ? \"OKAY\" : \"UPDATE\"}\r\n                                        type={(contactData.daysSince.daysSinceEmailConfirmed < 180 ) ? \"success\" : \"error\"}\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </Table>\r\n                        <Button>\r\n                            Confirm Information\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactInformationWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst ContactInformationWithStyle = withStyles(styles)(ContactInformationWidget);\r\n\r\nfunction ContactInformationWithProviders(){\r\n    return (\r\n        <ContactInformationProvider>\r\n            <ContactInformationWithStyle />\r\n        </ContactInformationProvider>\r\n    )\r\n}\r\n\r\nexport default ContactInformationWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\mealPlan.card.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    Table,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell,\r\n    TableBody\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { MealPlanProvider, useMealPlanInformation } from '../context/meal-plan.context';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction MealPlanWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {data: mealData, isLoading: mealLoading, isError: mealIsError, error: mealError} = useMealPlanInformation();\r\n\r\n    useEffect(() => {\r\n        console.log(mealLoading);\r\n    }, [mealLoading])\r\n\r\n    useEffect(() => {\r\n        if (mealData) {\r\n            console.log(mealData);\r\n        }\r\n    }, [mealData])\r\n\r\n    useEffect(() => {\r\n        if (mealError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Meal Plan',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [mealError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    return (\r\n       <>\r\n        {mealData && (\r\n            <div>\r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>EagleCard Information</TableCell>\r\n                            <TableCell align=\"right\">Balance</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {mealData.boardPlan.map(n => {\r\n                    return (\r\n                            <TableRow key={n.boardPlanId}>\r\n                                <TableCell>\r\n                                    <Typography gutterBottom variant=\"h5\">{`${n.boardPlan}`}</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <div align=\"right\">\r\n                                        <CircularProgress variant=\"static\" value={((parseInt(n.semQtrRemaining, 10))/n.semQtrAllowed) * 100} />\r\n                                    </div>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                    {mealData.storedValue.map(n => {\r\n                        return (\r\n                            <TableRow key={n.typeId}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    <Typography className={classes.title} variant=\"h5\" gutterButtom>{n.name}</Typography>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Typography classes={classes.item} variant=\"h6\" gutterButtom>\r\n                                    {new Intl.NumberFormat('en-US',\r\n                                    {style: 'currency', currency: 'USD'}).format(n.balance)}\r\n                                    </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        );\r\n                    })}\r\n                    </TableBody>\r\n                </Table>\r\n            </div>\r\n        )}\r\n       </>\r\n    );\r\n}\r\n\r\nMealPlanWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst MealPlanWithStyle = withStyles(styles)(MealPlanWidget);\r\n\r\nfunction MealPlanWithProviders(){\r\n    return (\r\n        <MealPlanProvider>\r\n            <MealPlanWithStyle />\r\n        </MealPlanProvider>\r\n    )\r\n}\r\n\r\nexport default MealPlanWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\accountDetail.card.jsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],[],"import React, {useCallback, useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Dropdown,\r\n    DropdownItem,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip,\r\n    Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableRow,\r\n    TableCell\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred,\r\n    colorFillAlertError\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n import { useCardControl, useCardInfo, useExtensionControl, useUserInfo } from '@ellucian/experience-extension/extension-utilities';\r\n import { AccountDetailProvider, useAccountDetail } from '../context/account-detail.context';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction AccountBalanceWidget(props) {\r\n    const {classes} = props;\r\n    // Experience SDK hooks\r\n    const { navigateToPage } = useCardControl();\r\n    const { setErrorMessage, setLoadingStatus } = useExtensionControl();\r\n    const {\r\n        balance: {\r\n            balanceData,\r\n            balanceIsError,\r\n            balanceLoading,\r\n            balanceError\r\n        },\r\n        selectedTerm,\r\n        setTerm,\r\n        currentTerm: {\r\n            currentTermData,\r\n            currentTermLoading,\r\n            currentTermIsError,\r\n            currentTermError\r\n        },\r\n        detail: {\r\n            detailData,\r\n            detailLoading,\r\n            detailIsError,\r\n            detailError\r\n        }\r\n    } = useAccountDetail();\r\n    const [termSelected, setTermSelected] = useState();\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setLoadingStatus((balanceLoading || detailLoading));\r\n    }, [balanceLoading, detailLoading])\r\n\r\n     useEffect(() => {\r\n        if (balanceData) {\r\n            console.log(balanceData);\r\n        }\r\n        if (detailData) {\r\n            console.log(detailData);\r\n        }\r\n    }, [balanceData, detailData])\r\n\r\n    useEffect(() => {\r\n        if (balanceError) {\r\n            setErrorMessage({\r\n                headerMessage: 'Error occurred while fetching data',\r\n                textMessage: 'Error fetching Account Balance',\r\n                iconName: 'warning',\r\n                iconColor: colorFillAlertError\r\n            });\r\n        }\r\n    }, [balanceError, setErrorMessage]);\r\n\r\n    const onTransactionsClick = useCallback(() => {\r\n        // open the page\r\n        navigateToPage({route: '/'});\r\n    }, [navigateToPage])\r\n\r\n    const handleChange = event => {\r\n        setTermSelected(event.target.value)\r\n        setTerm(event.target.value)\r\n    }\r\n\r\n    /* useEffect(() => {\r\n        console.log(\"Term in child\", term)\r\n    }, [term]) */\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {balanceData && (\r\n                <Dropdown\r\n                    label=\"Terms\"\r\n                    onChange={handleChange}\r\n                    value={termSelected}\r\n                    open={dropdownOpen}\r\n                    onOpen={() => setDropdownOpen(true)}\r\n                    onClose={() => setDropdownOpen(false)}\r\n                >\r\n                    {\r\n                        currentTermData && (\r\n                            <DropdownItem\r\n                                key={currentTermData.code}\r\n                                label={currentTermData.title}\r\n                                value={currentTermData.code}\r\n                            />\r\n                        )\r\n                    }\r\n                     {balanceData.Periods.map((period) => {\r\n                        return (\r\n                            <DropdownItem\r\n                            key={period.Id}\r\n                            label={period.Description}\r\n                            value={period.Id}\r\n                        />\r\n                        )})\r\n                    }\r\n                </Dropdown>\r\n            )}\r\n            <div>\r\n                {detailData && (\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>\r\n                                    <Typography>Term Selected</Typography>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                     <Typography>{detailData.term}</Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Amount: ${detailData.AmountDue}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nAccountBalanceWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nconst AccountBalanceWithStyle = withStyles(styles)(AccountBalanceWidget);\r\n\r\nfunction AccountBalanceWithProviders(){\r\n    return (\r\n        <AccountDetailProvider>\r\n            <AccountBalanceWithStyle />\r\n        </AccountDetailProvider >\r\n    )\r\n}\r\n\r\nexport default AccountBalanceWithProviders;","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\helpInfo.card.jsx",["216","217","218","219","220","221","222","223","224"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport {\r\n    Card,\r\n    CardHeader,\r\n    CardContent,\r\n    CardMedia,\r\n    CircularProgress,\r\n    Typography,\r\n    IconButton,\r\n    NotificationBadge,\r\n    Tooltip\r\n} from '@ellucian/react-design-system/core';\r\nimport {Icon} from '@ellucian/ds-icons/lib';\r\nimport {\r\n    spacingInset10,\r\n    heightFluid,\r\n    widthFluid,\r\n    borderRadiusSmall,\r\n    colorFillLogoPreferred\r\n } from '@ellucian/react-design-system/core/styles/tokens';\r\n\r\n\r\n const styles = theme => ({\r\n    root: {\r\n        height: heightFluid,\r\n        width: widthFluid,\r\n        borderRadius: borderRadiusSmall,\r\n        backgroundColor: colorFillLogoPreferred\r\n    },\r\n    content: {\r\n        padding: spacingInset10\r\n    }\r\n});\r\n\r\n\r\nfunction HelpWidget(props) {\r\n    const {classes} = props;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <IconButton aria-label=\"Calendar 23 new events\" color=\"gray\">\r\n                <Icon name=\"help\" id=\"calendar2\" style={{ width: 24, height: 24 }} />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nHelpWidget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HelpWidget);","C:\\Windows\\life-nest\\life-nest-foundation\\src\\hooks\\useProfileInfo.js",["225","226","227"],[],"export async function fetchCurrentTerm({queryKey}){\r\n    const [_key, {getEthosQuery}] = queryKey\r\n    try {\r\n        const event= new Date(Date.now());\r\n        const jsonDate = event.toJSON();\r\n        const datetime = jsonDate.substring(0, jsonDate.indexOf('T'));\r\n        const currentTerm = await getEthosQuery({queryId: 'get-this-term', properties: {'current': datetime}});\r\n        const {data: {term: {edges: termEdges } = []} = {} } = currentTerm;\r\n        const term = termEdges.map(edge => edge.node);\r\n        return term[0]\r\n    } catch (error) {\r\n        throw new Error('Error during ethos query');\r\n    }\r\n}\r\n\r\nexport async function fetchProfileData({queryKey}){\r\n    const [_key, {getExtensionJwt, base, endpoint, method}] = queryKey\r\n\r\n    try {\r\n        const url = `${base}/${endpoint}`;\r\n        const jwt = await getExtensionJwt();\r\n        return fetch(url, {\r\n            method: method,\r\n            headers: {\r\n                'Authorization': `Bearer ${jwt}`\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error\r\n    }\r\n}\r\n\r\nexport async function fetchBalanceDetail({queryKey}){\r\n    const [_key, {getExtensionJwt, getEthosQuery, base, endpoint, method, term}] = queryKey\r\n    console.log(queryKey);\r\n    const payload={\"term\":term}\r\n\r\n    if (term === 'default'){\r\n        try {\r\n            // console.log(\"trying to fetch with default logic\");\r\n            const event= new Date(Date.now());\r\n            // console.log(\"current date\", event);\r\n            const jsonDate = event.toJSON();\r\n            // console.log(\"current date to JSON\", jsonDate);\r\n            const datetime = jsonDate.substring(0, jsonDate.indexOf('T'));\r\n            // console.log(\"Current date to datetime slice\", datetime);\r\n            const currentTerm = await getEthosQuery({queryId: 'get-this-term', properties: {'current': datetime}});\r\n            // console.log(\"current term: \", currentTerm);\r\n            const {data: {term: {edges: termEdges } = []} = {} } = currentTerm;\r\n            // console.log(\"termEdges: \", termEdges);\r\n            const term = termEdges.map(edge => edge.node);\r\n            // console.log(\"term: \", term);\r\n            const defaultTerm = term[0].code\r\n            // console.log(\"default term: \", defaultTerm);\r\n            const url = `${base}/${endpoint}`;\r\n            // console.log(\"url: \", url);\r\n            const jwt = await getExtensionJwt();\r\n            // console.log(\"jwt: \", jwt);\r\n            return fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({term: defaultTerm})\r\n            })\r\n            .then(res => res.json())\r\n        } catch (error) {\r\n            throw new Error('Error during ethos query');\r\n        }\r\n    } else {\r\n        try {\r\n            const url = `${base}/${endpoint}`;\r\n            const jwt = await getExtensionJwt();\r\n            return fetch(url, {\r\n                method: method,\r\n                headers: {\r\n                    'Authorization': `Bearer ${jwt}`,\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(payload)\r\n            })\r\n            .then(res => res.json())\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error\r\n        }\r\n    }\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\contact-info.context.js",["228","229","230","231","232","233","234"],["235"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'contact-info';\r\nconst queryClient = new QueryClient();\r\nimport {fetchProfileData} from '../hooks/useProfileInfo';\r\n\r\nfunction ContactInformationProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [ contactCachedData, setContactCachedData ] = useState();\r\n\r\n\r\n    const contactQuery = useQuery(\r\n        [\"contactInfo\", {getExtensionJwt, base, endpoint: 'profile', method: 'GET'}],\r\n        fetchProfileData\r\n    )\r\n\r\n    const {data: contactData, isLoading: contactLoading, isError: contactIsError, error: contactError} = contactQuery;\r\n\r\n\r\n    const contextValueContact = useMemo(() => {\r\n        return {\r\n            data: contactData || contactCachedData,\r\n            isError: contactIsError,\r\n            isLoading: contactLoading,\r\n            error: contactError\r\n        }\r\n    }, [contactCachedData, contactData, contactError, contactLoading]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('ContactInformationProvider mounted');\r\n        console.log('ContextValue', contextValueContact);\r\n        return () => {\r\n            console.log('ContactInformationProvider unmounted')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValueContact}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nContactInformationProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function ContactInformationProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <ContactInformationProviderInternal>\r\n                {children}\r\n            </ContactInformationProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nContactInformationProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function useContactInformation(){\r\n    return useContext(Context);\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\meal-plan.context.js",["236","237","238","239","240","241","242"],["243"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'meal-plan';\r\nconst queryClient = new QueryClient();\r\nimport {fetchProfileData} from '../hooks/useProfileInfo';\r\n\r\nfunction MealPlanProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [ mealCachedData, setMealCachedData ] = useState();\r\n\r\n    const mealQuery = useQuery(\r\n        [\"mealPlan\", {getExtensionJwt, base, endpoint: 'transact', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n\r\n    const {data: mealData, isLoading: mealLoading, isError: mealIsError, error: mealError} = mealQuery;\r\n\r\n\r\n    const contextValueMeal = useMemo(() => {\r\n        return {\r\n            data: mealData || mealCachedData,\r\n            isError: mealIsError,\r\n            isLoading: mealLoading,\r\n            error: mealError\r\n        }\r\n    }, [mealCachedData, mealData, mealError, mealLoading]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('MealPlanProvider mounted');\r\n        console.log('ContextValue', contextValueMeal);\r\n        return () => {\r\n            console.log('MealPlanProvider unmounted')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValueMeal}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nMealPlanProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function MealPlanProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <MealPlanProviderInternal>\r\n                {children}\r\n            </MealPlanProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nMealPlanProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function useMealPlanInformation(){\r\n    return useContext(Context);\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\password-expiration.context.js",["244","245","246","247","248","249","250"],["251"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'profile-dashboard';\r\nconst queryClient = new QueryClient();\r\nimport {fetchProfileData} from '../hooks/useProfileInfo';\r\n\r\nfunction PasswordExpirationProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [ pwdCachedData, setPwdCachedData ] = useState();\r\n\r\n    const pwdQuery = useQuery(\r\n        [\"pwdExpiry\", {getExtensionJwt, base, endpoint: 'pwdexpiry', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n\r\n\r\n    const {data: pwdData, isLoading: pwdLoading, isError: pwdIsError, error: pwdError} = pwdQuery;\r\n\r\n\r\n    const contextValuePwd = useMemo(() => {\r\n        return {\r\n            data: pwdData || pwdCachedData,\r\n            isError: pwdIsError,\r\n            isLoading: pwdLoading,\r\n            error: pwdError\r\n        }\r\n    }, [pwdCachedData, pwdData, pwdError, pwdLoading]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('PasswordExpirationProvider mounted');\r\n        console.log('ContextValue', contextValuePwd);\r\n        return () => {\r\n            console.log('PasswordExpirationProvider unmounted')\r\n            console.log('ContextValuePwd', contextValuePwd)\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValuePwd}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nPasswordExpirationProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function PasswordExpirationProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <PasswordExpirationProviderInternal>\r\n                {children}\r\n            </PasswordExpirationProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nPasswordExpirationProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function usePasswordExpiration(){\r\n    return useContext(Context);\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\account-balance.context.js",["252","253","254","255","256","257","258","259"],["260"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'account-balance';\r\nconst queryClient = new QueryClient();\r\nimport {fetchProfileData} from '../hooks/useProfileInfo';\r\n\r\nfunction AccountBalanceProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    const [ balanceCachedData, setBalanceCachedData ] = useState();\r\n\r\n    const balanceQuery = useQuery(\r\n        [\"accountBalance\", {getExtensionJwt, base, endpoint: 'account/balance', method: 'POST'}],\r\n        fetchProfileData\r\n    )\r\n\r\n    const {data: balanceData, isLoading: balanceLoading, isError: balanceIsError, error: balanceError} = balanceQuery;\r\n\r\n    const contextValueBalance = useMemo(() => {\r\n        return {\r\n            data: balanceData || balanceCachedData,\r\n            isError: balanceError,\r\n            isLoading: balanceLoading\r\n        }\r\n    }, [balanceCachedData, balanceData, balanceError, balanceLoading]);\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('AccountBalanceProvider mounted');\r\n        console.log('ContextValue', contextValueBalance);\r\n        return () => {\r\n            console.log('AccountBalanceProvider unmounted')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValueBalance}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nAccountBalanceProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function AccountBalanceProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <AccountBalanceProviderInternal>\r\n                {children}\r\n            </AccountBalanceProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nAccountBalanceProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function useAccountBalance(){\r\n    return useContext(Context);\r\n}",["261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"C:\\Windows\\life-nest\\life-nest-foundation\\src\\context\\account-detail.context.js",["276","277"],["278"],"import React, {createContext, useContext, useEffect, useMemo, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n// eslint-disable-next-line camelcase\r\nimport {unstable_batchedUpdates} from 'react-dom';\r\nimport {QueryClient, QueryClientProvider, useQuery} from 'react-query';\r\nimport {useCache, useCardInfo, useData} from '@ellucian/experience-extension/extension-utilities';\r\nconst Context = createContext();\r\nconst cacheKey = 'profile-dashboard';\r\nconst queryClient = new QueryClient();\r\nimport {fetchCurrentTerm, fetchProfileData, fetchBalanceDetail} from '../hooks/useProfileInfo';\r\n\r\nfunction AccountDetailProviderInternal({children}) {\r\n\r\n    const {getItem, storeItem} = useCache();\r\n    const {configuration, cardId} = useCardInfo();\r\n    const {getExtensionJwt, getEthosQuery} = useData();\r\n    const {baseApi: base} = configuration;\r\n\r\n    // hooks to store cached data\r\n    const [currentTermCachedData, setCurrentTermCachedData] = useState();\r\n    const [accountDetailCachedData, setAccountDetailCachedData] = useState();\r\n    const [accountBalanceCachedData, setAccountBalanceCachedData] = useState();\r\n\r\n    // hook to trigger account detail query\r\n    const [selectedTerm, setSelectedTerm] = useState('default');\r\n\r\n    // hooks to signal load cached data status. Default is true so first attempt is trying to fecth from cache.\r\n    const [loadCurrentTermFromCache, setLoadCurrentTermFromCache] = useState(true);\r\n    const [loadBalanceFromCache, setLoadBalanceFromCache] = useState(true);\r\n    const [loadDetailFromCache, setLoadDetailFromCache] = useState(true);\r\n\r\n    // hooks to signal load from query status. Default is false so first attempt is done using cached data.\r\n    const [loadCurrentTermFromQuery, setLoadCurrentTermFromQuery] = useState(false);\r\n    const [loadBalanceFromQuery, setLoadBalanceFromQuery] = useState(false);\r\n    const [loadDetailFromQuery, setLoadDetailFromQuery] = useState(false);\r\n\r\n    const {data: currentTermData, isLoading: currentTermLoading, isError: currentTermIsError, error: currentTermError} = useQuery(\r\n        [\"currentTerm\", {getEthosQuery}],\r\n        fetchCurrentTerm,\r\n        {\r\n            enabled: Boolean(loadCurrentTermFromQuery && getEthosQuery),\r\n            placeholderData: currentTermCachedData\r\n        }\r\n    )\r\n    const {data: detailData, isLoading: detailLoading, isError: detailIsError, error: detailError} = useQuery(\r\n        [\"accountDetail\", {getExtensionJwt, getEthosQuery, base, endpoint: 'account/detail', method: 'POST', term: selectedTerm}],\r\n        fetchBalanceDetail,\r\n        {\r\n            enabled: Boolean(loadDetailFromQuery && getExtensionJwt && base && selectedTerm)\r\n        }\r\n    )\r\n    const {data: balanceData, isLoading: balanceLoading, isError: balanceIsError, error: balanceError} = useQuery(\r\n        [\"accountBalance\", {getExtensionJwt, base, endpoint: 'account/balance', method: 'POST'}],\r\n        fetchProfileData,\r\n        {\r\n            enabled: Boolean(loadBalanceFromQuery && getExtensionJwt && base),\r\n            placeholderData: accountBalanceCachedData\r\n        }\r\n    )\r\n\r\n    // useEffect for performing currentTerm cache checking logic\r\n    useEffect(() => {\r\n        if (loadCurrentTermFromCache){\r\n            (async () => {\r\n                // check for cached data\r\n                const {data: currentTermCacheData} = await getItem({key: 'currentTerm'});\r\n\r\n                unstable_batchedUpdates(() => {\r\n                    setLoadCurrentTermFromCache(false);\r\n\r\n                    if (currentTermCacheData){\r\n                        setCurrentTermCachedData(currentTermCacheData);\r\n                        setLoadCurrentTermFromQuery(false);\r\n                    } else {\r\n                        setLoadCurrentTermFromQuery(true);\r\n                    }\r\n                })\r\n            })();\r\n        }\r\n    }, [loadCurrentTermFromCache]);\r\n\r\n    // useEffect for performing balanceData cache checking logic\r\n    useEffect(() => {\r\n        if (loadBalanceFromCache){\r\n            (async () => {\r\n                // check for cached data\r\n                const {data: accountBalanceCacheData} = await getItem({key: 'accountBalance'});\r\n\r\n                unstable_batchedUpdates(() => {\r\n                    setLoadCurrentTermFromCache(false);\r\n\r\n                    if (accountBalanceCacheData){\r\n                        setAccountBalanceCachedData(accountBalanceCacheData);\r\n                        setLoadBalanceFromQuery(false);\r\n                    } else {\r\n                        setLoadBalanceFromQuery(true);\r\n                    }\r\n                })\r\n            })();\r\n        }\r\n    }, [loadBalanceFromCache]);\r\n\r\n    // useEffect for performing detailData cache checking logic\r\n    useEffect(() => {\r\n            (async () => {\r\n                // check for cached data\r\n                const {data: accountDetailCacheData} = await getItem({key: `accountDetail/${selectedTerm}`});\r\n\r\n                unstable_batchedUpdates(() => {\r\n                    setLoadDetailFromCache(false);\r\n\r\n                    if (accountDetailCacheData){\r\n                        console.log('The term from cache', accountDetailCacheData.term)\r\n                        setAccountDetailCachedData(accountDetailCacheData);\r\n                    } else {\r\n                        setLoadDetailFromQuery(true);\r\n                    }\r\n\r\n                })\r\n            })();\r\n    }, [loadDetailFromCache, selectedTerm]);\r\n\r\n\r\n    // useEffect for storing currentTerm data and turning off useState hooks\r\n    useEffect(() => {\r\n        if (currentTermData) {\r\n            console.log('trying to store currentTerm in cache');\r\n            storeItem({data: currentTermData, key: 'currentTerm'});\r\n            setLoadCurrentTermFromCache(false);\r\n            setLoadCurrentTermFromQuery(false);\r\n        }\r\n    }, [currentTermData]);\r\n\r\n    // useEffect for storing accountBalance data and turning off useState hooks\r\n    useEffect(() => {\r\n        if (balanceData) {\r\n            console.log('trying to store balanceData in cache');\r\n            storeItem({data: balanceData, key: 'accountBalance'});\r\n            setLoadBalanceFromCache(false);\r\n            setLoadBalanceFromQuery(false);\r\n        }\r\n    }, [balanceData]);\r\n\r\n    // useEffect for storing accountDetail data and turning off useState hooks\r\n    useEffect(() => {\r\n        if (detailData) {\r\n            console.log('trying to store detailData in cache');\r\n            storeItem({data: detailData, key: `accountDetail/${selectedTerm}`});\r\n            setLoadDetailFromCache(false);\r\n            setLoadDetailFromQuery(false);\r\n        }\r\n    }, [detailData, selectedTerm]);\r\n\r\n    const contextValueBalance = useMemo(() => {\r\n        return {\r\n            balance: {\r\n                balanceData: balanceData || accountBalanceCachedData,\r\n                balanceIsError,\r\n                balanceLoading,\r\n                balanceError\r\n            },\r\n            currentTerm: {\r\n                currentTermData: currentTermData || currentTermCachedData,\r\n                currentTermLoading,\r\n                currentTermIsError,\r\n                currentTermError\r\n            },\r\n            selectedTerm,\r\n            setTerm: (term) => setSelectedTerm(term),\r\n            detail: {\r\n                detailData: detailData || accountDetailCachedData,\r\n                detailLoading,\r\n                detailIsError,\r\n                detailError\r\n            }\r\n        }\r\n    }, [\r\n        accountBalanceCachedData, currentTermCachedData, accountDetailCachedData,\r\n        balanceData, currentTermData, detailData,\r\n        balanceError, currentTermError, detailError,\r\n        balanceLoading, currentTermLoading, detailLoading\r\n        ]);\r\n\r\n   /*  useEffect(() => {\r\n        console.log('currentTerm cache logger');\r\n        console.log('currentTermCachedData, the actual data object', currentTermCachedData);\r\n        console.log('loadCurrentTermFromCache, hook to try cached data. Default is true', loadCurrentTermFromCache);\r\n        console.log('loadCurrentTermFromQuery, hook to try query data. Default is false', loadCurrentTermFromQuery);\r\n        console.log('currentTermData, the data retrieved from useQuery', currentTermData);\r\n    }, [\r\n        currentTermCachedData,\r\n        loadCurrentTermFromCache,\r\n        loadCurrentTermFromQuery,\r\n        currentTermData\r\n    ]);\r\n */\r\n    /* useEffect(() => {\r\n        console.log('accountBalance cache logger');\r\n        console.log('accountBalanceCachedData, the actual data object', accountBalanceCachedData);\r\n        console.log('loadBalanceFromCache, hook to try cached data. Default is true', loadBalanceFromCache);\r\n        console.log('loadBalanceFromQuery, hook to try query data. Default is false', loadBalanceFromQuery);\r\n        console.log('BalanceData, the data retrieved from useQuery', balanceData);\r\n    }, [\r\n        accountBalanceCachedData,\r\n        loadBalanceFromCache,\r\n        loadBalanceFromQuery,\r\n        balanceData\r\n    ]); */\r\n\r\n    useEffect(() => {\r\n        console.log('accountDetail cache logger');\r\n        console.log('accountDetailCachedData, the actual data object', accountDetailCachedData);\r\n        console.log('loadDetailFromCache, hook to try cached data. Default is true', loadDetailFromCache);\r\n        console.log('loadDetailFromQuery, hook to try query data. Default is false', loadDetailFromQuery);\r\n        console.log('DetailData, the data retrieved from useQuery', detailData);\r\n        console.log('DetailData, the selectedTerm', selectedTerm);\r\n    }, [\r\n        accountDetailCachedData,\r\n        loadDetailFromCache,\r\n        loadDetailFromQuery,\r\n        detailData,\r\n        selectedTerm\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        console.log('AccountDetailProvider mounted');\r\n        return () => {\r\n            console.log('AccountDetailProvider unmounted')\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <Context.Provider value={contextValueBalance}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nAccountDetailProviderInternal.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function AccountDetailProvider({children}){\r\n    return (\r\n        <QueryClientProvider client={queryClient}>\r\n            <AccountDetailProviderInternal>\r\n                {children}\r\n            </AccountDetailProviderInternal>\r\n        </QueryClientProvider>\r\n    )\r\n}\r\n\r\nAccountDetailProvider.propTypes = {\r\n    children: PropTypes.object.isRequired\r\n}\r\n\r\nexport function useAccountDetail(){\r\n    return useContext(Context);\r\n}","C:\\Windows\\life-nest\\life-nest-foundation\\src\\components\\dashboardNotifications.card.jsx",["279","280","281","282","283","284","285","286","287","288","289","290"],[],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    HeaderBar,\r\n    HeaderBarDropdown,\r\n    HeaderBarLogo,\r\n    HeaderBarItem,\r\n    HeaderUtilityBar,\r\n    IconButton,\r\n    Typography,\r\n    FormControlLabel,\r\n    FormControl,\r\n    FormLabel,\r\n    Radio,\r\n    RadioGroup\r\n} from '@ellucian/react-design-system/core';\r\nimport { withStyles } from '@ellucian/react-design-system/core/styles';\r\nimport { Icon } from '@ellucian/ds-icons/lib';\r\nimport { widthFluid } from '@ellucian/react-design-system/core/styles/tokens';\r\n\r\nconst styles = (theme) => ({\r\n    // NOTE This custom CSS below is added purely for the demo.\r\n    // DO NOT use these styles in your app.\r\n    // Each App will ONLY have a single header bar. We have two.\r\n    // One for our demo app navigation and the other for the heade-rbar component demo.\r\n    headerBarCustomTempClass: {\r\n\r\n    },\r\n    // Page content class\r\n    pageContent: {\r\n\r\n    }\r\n});\r\n\r\nconst customId = 'SimpleHeaderBarExample';\r\nconst menuItems1 = [\r\n    {label: 'Degree Requirements', value: 'DegreeRequirements'},\r\n    {label: 'What If?', value: 'whatif'},\r\n    {label: 'Inquire', value: 'Inquire'},\r\n    {label: 'Apply to School', value: 'apply'}\r\n];\r\n\r\n\r\n\r\nclass Example extends React.Component {\r\n    state = {\r\n        activeItem: null,\r\n        pageContent: \"Page Content of 'Link 1'\"};\r\n\r\n    onMenuItemClick = (e, item) => this.setState({pageContent: `Page Content of '${item.label}'`});\r\n    onAnchorClick = (label) => this.setState({pageContent: `Page Content of '${label}'`});\r\n\r\n    setActiveItem = item => event => {\r\n\r\n        const {checked} = event.target;\r\n\r\n        if (checked && this.state.activeItem !== item) {\r\n            this.setState({activeItem: item});\r\n        }\r\n    };\r\n\r\n    activeItemSelected = (item) => {\r\n        this.setState({activeItem: item.props.itemKey});\r\n    };\r\n\r\n    isItemSelected = (itemKey) => {\r\n        return itemKey === this.state.activeItem;\r\n    };\r\n\r\n    handleSearch = (searchText) => {\r\n        this.setState({pageContent: `Search for '${searchText}'`});\r\n    };\r\n\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const profileItems = [\r\n            {value: 'profileItem1', label: 'Item 1'},\r\n            {value: 'profileItem2', label: 'Item 2'},\r\n            {value: 'profileItem3', label: 'Item 3'}\r\n        ];\r\n\r\n        return (\r\n            <div id={`${customId}_Container`} className={classes.root}>\r\n\r\n                <div className={classes.headerBarCustomTempClass}>\r\n                    <HeaderBar\r\n                        position=\"static\"\r\n                        id={`${customId}_HeaderBar`}\r\n                        responsiveType=\"small\"\r\n                        showSearch={false}\r\n                        onSearch={this.handleSearch}\r\n                        onActiveItemChanged={this.activeItemSelected.bind(this)}\r\n                    >\r\n\r\n                        <HeaderBarItem id={`${customId}_HeaderBarItem4`} itemKey=\"dropdownmenu1\" active={this.isItemSelected('dropdownmenu1')}>\r\n                            <HeaderBarDropdown onMenuItemClick={this.onMenuItemClick.bind(this)}\r\n                                menuItems={menuItems1}\r\n                                dropdownMenuLabel={'Dropdown Menu 1'}\r\n                            />\r\n                        </HeaderBarItem>\r\n\r\n                    </HeaderBar>\r\n\r\n                    <Typography id={`${customId}_PageContent`}\r\n                        className={classes.pageContent}\r\n                        variant=\"h1\"\r\n                        gutterBottom align=\"center\">\r\n                        {this.state.pageContent}\r\n                    </Typography>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nExample.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Example);\r\n",{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","replacedBy":"298"},{"ruleId":"299","replacedBy":"300"},{"ruleId":"301","replacedBy":"302"},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"307","replacedBy":"308"},{"ruleId":"309","replacedBy":"310"},{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","replacedBy":"316"},{"ruleId":"317","replacedBy":"318"},{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","severity":1,"message":"322","line":4,"column":22,"nodeType":"323","messageId":"324","endLine":4,"endColumn":27},{"ruleId":"325","severity":1,"message":"326","line":7,"column":14,"nodeType":"327","endLine":9,"endColumn":9},{"ruleId":"325","severity":1,"message":"328","line":7,"column":14,"nodeType":"327","endLine":9,"endColumn":9},{"ruleId":"321","severity":1,"message":"329","line":5,"column":5,"nodeType":"323","messageId":"324","endLine":5,"endColumn":9},{"ruleId":"321","severity":1,"message":"330","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":9},{"ruleId":"321","severity":1,"message":"331","line":11,"column":5,"nodeType":"323","messageId":"324","endLine":11,"endColumn":15},{"ruleId":"321","severity":1,"message":"332","line":12,"column":5,"nodeType":"323","messageId":"324","endLine":12,"endColumn":15},{"ruleId":"321","severity":1,"message":"333","line":14,"column":5,"nodeType":"323","messageId":"324","endLine":14,"endColumn":12},{"ruleId":"321","severity":1,"message":"334","line":15,"column":5,"nodeType":"323","messageId":"324","endLine":15,"endColumn":14},{"ruleId":"321","severity":1,"message":"335","line":16,"column":5,"nodeType":"323","messageId":"324","endLine":16,"endColumn":18},{"ruleId":"321","severity":1,"message":"336","line":17,"column":5,"nodeType":"323","messageId":"324","endLine":17,"endColumn":22},{"ruleId":"321","severity":1,"message":"337","line":18,"column":5,"nodeType":"323","messageId":"324","endLine":18,"endColumn":21},{"ruleId":"321","severity":1,"message":"338","line":19,"column":5,"nodeType":"323","messageId":"324","endLine":19,"endColumn":18},{"ruleId":"321","severity":1,"message":"339","line":20,"column":5,"nodeType":"323","messageId":"324","endLine":20,"endColumn":13},{"ruleId":"321","severity":1,"message":"340","line":23,"column":5,"nodeType":"323","messageId":"324","endLine":23,"endColumn":15},{"ruleId":"321","severity":1,"message":"341","line":27,"column":5,"nodeType":"323","messageId":"324","endLine":27,"endColumn":14},{"ruleId":"321","severity":1,"message":"342","line":28,"column":5,"nodeType":"323","messageId":"324","endLine":28,"endColumn":19},{"ruleId":"321","severity":1,"message":"343","line":29,"column":5,"nodeType":"323","messageId":"324","endLine":29,"endColumn":15},{"ruleId":"321","severity":1,"message":"344","line":36,"column":8,"nodeType":"323","messageId":"324","endLine":36,"endColumn":18},{"ruleId":"321","severity":1,"message":"345","line":37,"column":8,"nodeType":"323","messageId":"324","endLine":37,"endColumn":36},{"ruleId":"321","severity":1,"message":"346","line":53,"column":12,"nodeType":"323","messageId":"324","endLine":53,"endColumn":20},{"ruleId":"321","severity":1,"message":"347","line":55,"column":12,"nodeType":"323","messageId":"324","endLine":55,"endColumn":19},{"ruleId":"321","severity":1,"message":"348","line":55,"column":21,"nodeType":"323","messageId":"324","endLine":55,"endColumn":31},{"ruleId":"321","severity":1,"message":"349","line":57,"column":12,"nodeType":"323","messageId":"324","endLine":57,"endColumn":24},{"ruleId":"321","severity":1,"message":"350","line":57,"column":26,"nodeType":"323","messageId":"324","endLine":57,"endColumn":41},{"ruleId":"321","severity":1,"message":"351","line":58,"column":12,"nodeType":"323","messageId":"324","endLine":58,"endColumn":23},{"ruleId":"321","severity":1,"message":"352","line":58,"column":25,"nodeType":"323","messageId":"324","endLine":58,"endColumn":39},{"ruleId":"321","severity":1,"message":"353","line":60,"column":11,"nodeType":"323","messageId":"324","endLine":60,"endColumn":23},{"ruleId":"321","severity":1,"message":"354","line":66,"column":11,"nodeType":"323","messageId":"324","endLine":66,"endColumn":26},{"ruleId":"321","severity":1,"message":"329","line":5,"column":5,"nodeType":"323","messageId":"324","endLine":5,"endColumn":9},{"ruleId":"321","severity":1,"message":"355","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":15},{"ruleId":"321","severity":1,"message":"356","line":7,"column":5,"nodeType":"323","messageId":"324","endLine":7,"endColumn":16},{"ruleId":"321","severity":1,"message":"357","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":14},{"ruleId":"321","severity":1,"message":"358","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":21},{"ruleId":"321","severity":1,"message":"332","line":11,"column":5,"nodeType":"323","messageId":"324","endLine":11,"endColumn":15},{"ruleId":"321","severity":1,"message":"359","line":12,"column":5,"nodeType":"323","messageId":"324","endLine":12,"endColumn":22},{"ruleId":"321","severity":1,"message":"333","line":13,"column":5,"nodeType":"323","messageId":"324","endLine":13,"endColumn":12},{"ruleId":"321","severity":1,"message":"360","line":18,"column":9,"nodeType":"323","messageId":"324","endLine":18,"endColumn":13},{"ruleId":"321","severity":1,"message":"361","line":27,"column":27,"nodeType":"323","messageId":"324","endLine":27,"endColumn":38},{"ruleId":"321","severity":1,"message":"362","line":27,"column":61,"nodeType":"323","messageId":"324","endLine":27,"endColumn":72},{"ruleId":"321","severity":1,"message":"363","line":31,"column":17,"nodeType":"323","messageId":"324","endLine":31,"endColumn":22},{"ruleId":"321","severity":1,"message":"364","line":46,"column":20,"nodeType":"323","messageId":"324","endLine":46,"endColumn":29},{"ruleId":"321","severity":1,"message":"365","line":49,"column":30,"nodeType":"323","messageId":"324","endLine":49,"endColumn":46},{"ruleId":"321","severity":1,"message":"366","line":50,"column":59,"nodeType":"323","messageId":"324","endLine":50,"endColumn":69},{"ruleId":"321","severity":1,"message":"367","line":75,"column":11,"nodeType":"323","messageId":"324","endLine":75,"endColumn":30},{"ruleId":"325","severity":1,"message":"368","line":85,"column":91,"nodeType":"327","endLine":85,"endColumn":119},{"ruleId":"325","severity":1,"message":"369","line":95,"column":34,"nodeType":"327","endLine":96,"endColumn":79},{"ruleId":"321","severity":1,"message":"370","line":1,"column":40,"nodeType":"323","messageId":"324","endLine":1,"endColumn":48},{"ruleId":"321","severity":1,"message":"329","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":9},{"ruleId":"321","severity":1,"message":"355","line":7,"column":5,"nodeType":"323","messageId":"324","endLine":7,"endColumn":15},{"ruleId":"321","severity":1,"message":"356","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":16},{"ruleId":"321","severity":1,"message":"357","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":14},{"ruleId":"321","severity":1,"message":"358","line":10,"column":5,"nodeType":"323","messageId":"324","endLine":10,"endColumn":21},{"ruleId":"321","severity":1,"message":"332","line":12,"column":5,"nodeType":"323","messageId":"324","endLine":12,"endColumn":15},{"ruleId":"321","severity":1,"message":"359","line":13,"column":5,"nodeType":"323","messageId":"324","endLine":13,"endColumn":22},{"ruleId":"321","severity":1,"message":"333","line":15,"column":5,"nodeType":"323","messageId":"324","endLine":15,"endColumn":12},{"ruleId":"321","severity":1,"message":"360","line":20,"column":9,"nodeType":"323","messageId":"324","endLine":20,"endColumn":13},{"ruleId":"321","severity":1,"message":"361","line":29,"column":27,"nodeType":"323","messageId":"324","endLine":29,"endColumn":38},{"ruleId":"321","severity":1,"message":"362","line":29,"column":61,"nodeType":"323","messageId":"324","endLine":29,"endColumn":72},{"ruleId":"321","severity":1,"message":"363","line":33,"column":17,"nodeType":"323","messageId":"324","endLine":33,"endColumn":22},{"ruleId":"321","severity":1,"message":"371","line":61,"column":11,"nodeType":"323","messageId":"324","endLine":61,"endColumn":34},{"ruleId":"321","severity":1,"message":"367","line":110,"column":11,"nodeType":"323","messageId":"324","endLine":110,"endColumn":30},{"ruleId":"325","severity":1,"message":"372","line":120,"column":29,"nodeType":"327","endLine":120,"endColumn":48},{"ruleId":"325","severity":1,"message":"373","line":124,"column":49,"nodeType":"327","endLine":126,"endColumn":37},{"ruleId":"325","severity":1,"message":"328","line":124,"column":49,"nodeType":"327","endLine":126,"endColumn":37},{"ruleId":"325","severity":1,"message":"374","line":137,"column":49,"nodeType":"327","endLine":139,"endColumn":37},{"ruleId":"325","severity":1,"message":"328","line":137,"column":49,"nodeType":"327","endLine":139,"endColumn":37},{"ruleId":"325","severity":1,"message":"375","line":150,"column":49,"nodeType":"327","endLine":152,"endColumn":37},{"ruleId":"325","severity":1,"message":"328","line":150,"column":49,"nodeType":"327","endLine":152,"endColumn":37},{"ruleId":"325","severity":1,"message":"376","line":162,"column":33,"nodeType":"327","endLine":164,"endColumn":25},{"ruleId":"325","severity":1,"message":"328","line":162,"column":33,"nodeType":"327","endLine":164,"endColumn":25},{"ruleId":"321","severity":1,"message":"370","line":1,"column":40,"nodeType":"323","messageId":"324","endLine":1,"endColumn":48},{"ruleId":"321","severity":1,"message":"329","line":5,"column":5,"nodeType":"323","messageId":"324","endLine":5,"endColumn":9},{"ruleId":"321","severity":1,"message":"355","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":15},{"ruleId":"321","severity":1,"message":"356","line":7,"column":5,"nodeType":"323","messageId":"324","endLine":7,"endColumn":16},{"ruleId":"321","severity":1,"message":"357","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":14},{"ruleId":"321","severity":1,"message":"360","line":17,"column":9,"nodeType":"323","messageId":"324","endLine":17,"endColumn":13},{"ruleId":"321","severity":1,"message":"361","line":26,"column":27,"nodeType":"323","messageId":"324","endLine":26,"endColumn":38},{"ruleId":"321","severity":1,"message":"362","line":26,"column":61,"nodeType":"323","messageId":"324","endLine":26,"endColumn":72},{"ruleId":"321","severity":1,"message":"363","line":30,"column":17,"nodeType":"323","messageId":"324","endLine":30,"endColumn":22},{"ruleId":"321","severity":1,"message":"365","line":47,"column":30,"nodeType":"323","messageId":"324","endLine":47,"endColumn":46},{"ruleId":"321","severity":1,"message":"377","line":48,"column":61,"nodeType":"323","messageId":"324","endLine":48,"endColumn":72},{"ruleId":"321","severity":1,"message":"367","line":71,"column":11,"nodeType":"323","messageId":"324","endLine":71,"endColumn":30},{"ruleId":"325","severity":1,"message":"378","line":83,"column":40,"nodeType":"327","endLine":83,"endColumn":61},{"ruleId":"325","severity":1,"message":"379","line":84,"column":54,"nodeType":"327","endLine":84,"endColumn":61},{"ruleId":"321","severity":1,"message":"380","line":5,"column":5,"nodeType":"323","messageId":"324","endLine":5,"endColumn":11},{"ruleId":"321","severity":1,"message":"329","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":9},{"ruleId":"321","severity":1,"message":"355","line":7,"column":5,"nodeType":"323","messageId":"324","endLine":7,"endColumn":15},{"ruleId":"321","severity":1,"message":"356","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":16},{"ruleId":"321","severity":1,"message":"357","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":14},{"ruleId":"321","severity":1,"message":"358","line":10,"column":5,"nodeType":"323","messageId":"324","endLine":10,"endColumn":21},{"ruleId":"321","severity":1,"message":"332","line":14,"column":5,"nodeType":"323","messageId":"324","endLine":14,"endColumn":15},{"ruleId":"321","severity":1,"message":"359","line":15,"column":5,"nodeType":"323","messageId":"324","endLine":15,"endColumn":22},{"ruleId":"321","severity":1,"message":"333","line":16,"column":5,"nodeType":"323","messageId":"324","endLine":16,"endColumn":12},{"ruleId":"321","severity":1,"message":"360","line":23,"column":9,"nodeType":"323","messageId":"324","endLine":23,"endColumn":13},{"ruleId":"321","severity":1,"message":"361","line":32,"column":27,"nodeType":"323","messageId":"324","endLine":32,"endColumn":38},{"ruleId":"321","severity":1,"message":"362","line":32,"column":61,"nodeType":"323","messageId":"324","endLine":32,"endColumn":72},{"ruleId":"321","severity":1,"message":"363","line":36,"column":17,"nodeType":"323","messageId":"324","endLine":36,"endColumn":22},{"ruleId":"321","severity":1,"message":"381","line":57,"column":13,"nodeType":"323","messageId":"324","endLine":57,"endColumn":27},{"ruleId":"321","severity":1,"message":"382","line":61,"column":9,"nodeType":"323","messageId":"324","endLine":61,"endColumn":21},{"ruleId":"321","severity":1,"message":"383","line":65,"column":13,"nodeType":"323","messageId":"324","endLine":65,"endColumn":31},{"ruleId":"321","severity":1,"message":"384","line":66,"column":13,"nodeType":"323","messageId":"324","endLine":66,"endColumn":31},{"ruleId":"321","severity":1,"message":"385","line":67,"column":13,"nodeType":"323","messageId":"324","endLine":67,"endColumn":29},{"ruleId":"321","severity":1,"message":"386","line":72,"column":13,"nodeType":"323","messageId":"324","endLine":72,"endColumn":26},{"ruleId":"321","severity":1,"message":"387","line":73,"column":13,"nodeType":"323","messageId":"324","endLine":73,"endColumn":24},{"ruleId":"321","severity":1,"message":"367","line":105,"column":11,"nodeType":"323","messageId":"324","endLine":105,"endColumn":30},{"ruleId":"325","severity":1,"message":"388","line":156,"column":49,"nodeType":"327","endLine":156,"endColumn":62},{"ruleId":"325","severity":1,"message":"389","line":165,"column":44,"nodeType":"327","endLine":165,"endColumn":53},{"ruleId":"321","severity":1,"message":"329","line":5,"column":5,"nodeType":"323","messageId":"324","endLine":5,"endColumn":9},{"ruleId":"321","severity":1,"message":"355","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":15},{"ruleId":"321","severity":1,"message":"356","line":7,"column":5,"nodeType":"323","messageId":"324","endLine":7,"endColumn":16},{"ruleId":"321","severity":1,"message":"357","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":14},{"ruleId":"321","severity":1,"message":"358","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":21},{"ruleId":"321","severity":1,"message":"331","line":10,"column":5,"nodeType":"323","messageId":"324","endLine":10,"endColumn":15},{"ruleId":"321","severity":1,"message":"359","line":12,"column":5,"nodeType":"323","messageId":"324","endLine":12,"endColumn":22},{"ruleId":"321","severity":1,"message":"333","line":13,"column":5,"nodeType":"323","messageId":"324","endLine":13,"endColumn":12},{"ruleId":"321","severity":1,"message":"363","line":25,"column":17,"nodeType":"323","messageId":"324","endLine":25,"endColumn":22},{"ruleId":"321","severity":1,"message":"390","line":2,"column":12,"nodeType":"323","messageId":"324","endLine":2,"endColumn":16},{"ruleId":"321","severity":1,"message":"390","line":17,"column":12,"nodeType":"323","messageId":"324","endLine":17,"endColumn":16},{"ruleId":"321","severity":1,"message":"390","line":36,"column":12,"nodeType":"323","messageId":"324","endLine":36,"endColumn":16},{"ruleId":"321","severity":1,"message":"391","line":4,"column":9,"nodeType":"323","messageId":"324","endLine":4,"endColumn":32},{"ruleId":"321","severity":1,"message":"392","line":8,"column":7,"nodeType":"323","messageId":"324","endLine":8,"endColumn":15},{"ruleId":"321","severity":1,"message":"393","line":14,"column":12,"nodeType":"323","messageId":"324","endLine":14,"endColumn":19},{"ruleId":"321","severity":1,"message":"394","line":14,"column":21,"nodeType":"323","messageId":"324","endLine":14,"endColumn":30},{"ruleId":"321","severity":1,"message":"395","line":15,"column":27,"nodeType":"323","messageId":"324","endLine":15,"endColumn":33},{"ruleId":"321","severity":1,"message":"396","line":16,"column":29,"nodeType":"323","messageId":"324","endLine":16,"endColumn":42},{"ruleId":"321","severity":1,"message":"397","line":19,"column":32,"nodeType":"323","messageId":"324","endLine":19,"endColumn":52},{"ruleId":"398","severity":2,"message":"399","line":4,"column":9,"nodeType":"323","messageId":"400","endLine":4,"endColumn":32,"suppressions":"401"},{"ruleId":"321","severity":1,"message":"391","line":4,"column":9,"nodeType":"323","messageId":"324","endLine":4,"endColumn":32},{"ruleId":"321","severity":1,"message":"392","line":8,"column":7,"nodeType":"323","messageId":"324","endLine":8,"endColumn":15},{"ruleId":"321","severity":1,"message":"393","line":14,"column":12,"nodeType":"323","messageId":"324","endLine":14,"endColumn":19},{"ruleId":"321","severity":1,"message":"394","line":14,"column":21,"nodeType":"323","messageId":"324","endLine":14,"endColumn":30},{"ruleId":"321","severity":1,"message":"395","line":15,"column":27,"nodeType":"323","messageId":"324","endLine":15,"endColumn":33},{"ruleId":"321","severity":1,"message":"396","line":16,"column":29,"nodeType":"323","messageId":"324","endLine":16,"endColumn":42},{"ruleId":"321","severity":1,"message":"402","line":19,"column":29,"nodeType":"323","messageId":"324","endLine":19,"endColumn":46},{"ruleId":"398","severity":2,"message":"399","line":4,"column":9,"nodeType":"323","messageId":"400","endLine":4,"endColumn":32,"suppressions":"403"},{"ruleId":"321","severity":1,"message":"391","line":4,"column":9,"nodeType":"323","messageId":"324","endLine":4,"endColumn":32},{"ruleId":"321","severity":1,"message":"392","line":8,"column":7,"nodeType":"323","messageId":"324","endLine":8,"endColumn":15},{"ruleId":"321","severity":1,"message":"393","line":14,"column":12,"nodeType":"323","messageId":"324","endLine":14,"endColumn":19},{"ruleId":"321","severity":1,"message":"394","line":14,"column":21,"nodeType":"323","messageId":"324","endLine":14,"endColumn":30},{"ruleId":"321","severity":1,"message":"395","line":15,"column":27,"nodeType":"323","messageId":"324","endLine":15,"endColumn":33},{"ruleId":"321","severity":1,"message":"396","line":16,"column":29,"nodeType":"323","messageId":"324","endLine":16,"endColumn":42},{"ruleId":"321","severity":1,"message":"404","line":19,"column":28,"nodeType":"323","messageId":"324","endLine":19,"endColumn":44},{"ruleId":"398","severity":2,"message":"399","line":4,"column":9,"nodeType":"323","messageId":"400","endLine":4,"endColumn":32,"suppressions":"405"},{"ruleId":"321","severity":1,"message":"391","line":4,"column":9,"nodeType":"323","messageId":"324","endLine":4,"endColumn":32},{"ruleId":"321","severity":1,"message":"392","line":8,"column":7,"nodeType":"323","messageId":"324","endLine":8,"endColumn":15},{"ruleId":"321","severity":1,"message":"393","line":14,"column":12,"nodeType":"323","messageId":"324","endLine":14,"endColumn":19},{"ruleId":"321","severity":1,"message":"394","line":14,"column":21,"nodeType":"323","messageId":"324","endLine":14,"endColumn":30},{"ruleId":"321","severity":1,"message":"395","line":15,"column":27,"nodeType":"323","messageId":"324","endLine":15,"endColumn":33},{"ruleId":"321","severity":1,"message":"396","line":16,"column":29,"nodeType":"323","messageId":"324","endLine":16,"endColumn":42},{"ruleId":"321","severity":1,"message":"406","line":19,"column":32,"nodeType":"323","messageId":"324","endLine":19,"endColumn":52},{"ruleId":"321","severity":1,"message":"381","line":26,"column":67,"nodeType":"323","messageId":"324","endLine":26,"endColumn":81},{"ruleId":"398","severity":2,"message":"399","line":4,"column":9,"nodeType":"323","messageId":"400","endLine":4,"endColumn":32,"suppressions":"407"},{"ruleId":"291","replacedBy":"408"},{"ruleId":"293","replacedBy":"409"},{"ruleId":"295","replacedBy":"410"},{"ruleId":"297","replacedBy":"411"},{"ruleId":"299","replacedBy":"412"},{"ruleId":"301","replacedBy":"413"},{"ruleId":"303","replacedBy":"414"},{"ruleId":"305","replacedBy":"415"},{"ruleId":"307","replacedBy":"416"},{"ruleId":"309","replacedBy":"417"},{"ruleId":"311","replacedBy":"418"},{"ruleId":"313","replacedBy":"419"},{"ruleId":"315","replacedBy":"420"},{"ruleId":"317","replacedBy":"421"},{"ruleId":"319","replacedBy":"422"},{"ruleId":"321","severity":1,"message":"392","line":8,"column":7,"nodeType":"323","messageId":"324","endLine":8,"endColumn":15},{"ruleId":"321","severity":1,"message":"395","line":15,"column":27,"nodeType":"323","messageId":"324","endLine":15,"endColumn":33},{"ruleId":"398","severity":2,"message":"399","line":4,"column":9,"nodeType":"323","messageId":"400","endLine":4,"endColumn":32,"suppressions":"423"},{"ruleId":"321","severity":1,"message":"338","line":6,"column":5,"nodeType":"323","messageId":"324","endLine":6,"endColumn":18},{"ruleId":"321","severity":1,"message":"337","line":8,"column":5,"nodeType":"323","messageId":"324","endLine":8,"endColumn":21},{"ruleId":"321","severity":1,"message":"332","line":9,"column":5,"nodeType":"323","messageId":"324","endLine":9,"endColumn":15},{"ruleId":"321","severity":1,"message":"424","line":11,"column":5,"nodeType":"323","messageId":"324","endLine":11,"endColumn":21},{"ruleId":"321","severity":1,"message":"425","line":12,"column":5,"nodeType":"323","messageId":"324","endLine":12,"endColumn":16},{"ruleId":"321","severity":1,"message":"426","line":13,"column":5,"nodeType":"323","messageId":"324","endLine":13,"endColumn":14},{"ruleId":"321","severity":1,"message":"427","line":14,"column":5,"nodeType":"323","messageId":"324","endLine":14,"endColumn":10},{"ruleId":"321","severity":1,"message":"428","line":15,"column":5,"nodeType":"323","messageId":"324","endLine":15,"endColumn":15},{"ruleId":"321","severity":1,"message":"360","line":18,"column":10,"nodeType":"323","messageId":"324","endLine":18,"endColumn":14},{"ruleId":"321","severity":1,"message":"343","line":19,"column":10,"nodeType":"323","messageId":"324","endLine":19,"endColumn":20},{"ruleId":"321","severity":1,"message":"363","line":21,"column":17,"nodeType":"323","messageId":"324","endLine":21,"endColumn":22},{"ruleId":"321","severity":1,"message":"429","line":78,"column":15,"nodeType":"323","messageId":"324","endLine":78,"endColumn":27},"callback-return",[],"global-require",[],"id-blacklist",["430"],"lines-around-directive",["431"],"no-buffer-constructor",[],"no-mixed-requires",[],"no-native-reassign",["432"],"no-negated-in-lhs",["433"],"no-new-require",[],"no-path-concat",[],"no-process-exit",[],"no-restricted-modules",[],"no-spaced-func",["434"],"no-sync",[],"valid-jsdoc",[],"no-unused-vars","'props' is defined but never used.","Identifier","unusedVar","@calm/react-intl/missing-formatted-message","text may need translation: \"\n            profilePage\n        \"","JSXText","no trailing whitespace","'Card' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'HeaderBar' is defined but never used.","'HeaderBarItem' is defined but never used.","'HeaderBarDropdown' is defined but never used.","'HeaderUtilityBar' is defined but never used.","'HeaderBarLogo' is defined but never used.","'MegaMenu' is defined but never used.","'IconSprite' is defined but never used.","'spacing40' is defined but never used.","'spacingInset20' is defined but never used.","'widthFluid' is defined but never used.","'HelpWidget' is defined but never used.","'DashboardNotificationsWidget' is defined but never used.","'helpOpen' is assigned a value but never used.","'navOpen' is assigned a value but never used.","'setNavOpen' is assigned a value but never used.","'megaMenuOpen' is assigned a value but never used.","'setMegaMenuOpen' is assigned a value but never used.","'tabSelected' is assigned a value but never used.","'setTabSelected' is assigned a value but never used.","'containerRef' is assigned a value but never used.","'handleHelpClick' is assigned a value but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'CircularProgress' is defined but never used.","'NotificationBadge' is defined but never used.","'Icon' is defined but never used.","'useCardInfo' is defined but never used.","'useUserInfo' is defined but never used.","'theme' is defined but never used.","'setStatus' is assigned a value but never used.","'setLoadingStatus' is assigned a value but never used.","'pwdIsError' is assigned a value but never used.","'onTransactionsClick' is assigned a value but never used.","text may need translation: \"Days until password expires:\"","text may need translation: \"\n                    Visit our password management site to change your password\"","'useState' is defined but never used.","'contactInformationShape' is assigned a value but never used.","text may need translation: \"Contact Information\"","text may need translation: \"\n                                        Address:\n                                    \"","text may need translation: \"\n                                        Phone:\n                                    \"","text may need translation: \"\n                                        Email:\n                                    \"","text may need translation: \"\n                            Confirm Information\n                        \"","'mealIsError' is assigned a value but never used.","text may need translation: \"EagleCard Information\"","text may need translation: \"Balance\"","'Button' is defined but never used.","'balanceIsError' is assigned a value but never used.","'selectedTerm' is assigned a value but never used.","'currentTermLoading' is assigned a value but never used.","'currentTermIsError' is assigned a value but never used.","'currentTermError' is assigned a value but never used.","'detailIsError' is assigned a value but never used.","'detailError' is assigned a value but never used.","text may need translation: \"Term Selected\"","text may need translation: \"Amount: $\"","'_key' is assigned a value but never used.","'unstable_batchedUpdates' is defined but never used.","'cacheKey' is assigned a value but never used.","'getItem' is assigned a value but never used.","'storeItem' is assigned a value but never used.","'cardId' is assigned a value but never used.","'getEthosQuery' is assigned a value but never used.","'setContactCachedData' is assigned a value but never used.","camelcase","Identifier 'unstable_batchedUpdates' is not in camel case.","notCamelCase",["435"],"'setMealCachedData' is assigned a value but never used.",["436"],"'setPwdCachedData' is assigned a value but never used.",["437"],"'setBalanceCachedData' is assigned a value but never used.",["438"],[],[],["430"],["431"],[],[],["432"],["433"],[],[],[],[],["434"],[],[],["439"],"'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'profileItems' is assigned a value but never used.","id-denylist","padding-line-between-statements","no-global-assign","no-unsafe-negation","func-call-spacing",{"kind":"440","justification":"441"},{"kind":"440","justification":"441"},{"kind":"440","justification":"441"},{"kind":"440","justification":"441"},{"kind":"440","justification":"441"},"directive",""]